[{"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\index.js":"1","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\App.js":"2","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AppRouter.js":"3","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\routes.js":"4","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\Admin.js":"5","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\MainPage.js":"6","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\Auth.js":"7","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\utils\\Consts.js":"8","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\appeal\\userAppeal.js":"9","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\NavBar.js":"10","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\UserApi.js":"11","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\index.js":"12","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\creatAppeal.js":"13","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\appeal\\Appeal.js":"14","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabLegalEntityAppeal.js":"15","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\TabLegalEntityAppeal.js":"16","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\TabNaturalAppeal.js":"17","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\AppealApi.js":"18","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\EmployeePage.js":"19","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDOrganization.js":"20","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\CreatOrganization.js":"21","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\OrganizationList.js":"22","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\EditOrganiztion.js":"23","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDDepartment.js":"24","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\CreatDepartment.js":"25","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\DepartmentList.js":"26","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\EditDepartment.js":"27","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\ChoosingEmployeeAction.js":"28","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\RegistrationNewEmployee.js":"29","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDEmployee.js":"30","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\employeeCRUD\\EmployeeList.js":"31","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\employeeCRUD\\EmployeeProfile.js":"32","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\NaturalEntityAppealTab.js":"33","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\AnonAppealTab.js":"34","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\LegalEntityAppealTab.js":"35","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\Profile.js":"36","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewHistory.js":"37","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\Pages.js":"38","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewActApp.js":"39","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AppealItem.js":"40","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewNotActApp.js":"41","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\DropdownMenus.js":"42","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\SvgSelectors\\SvgSelectors.js":"43","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\Mailer.js":"44","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\CreateAnonAppeal.js":"45","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AnonAppeal.js":"46","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\InformationalWarning.js":"47","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AnonAppealItem.js":"48","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\Diagram.js":"49","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\Chart.js":"50","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\ChooseChart.js":"51","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\DiagramLegal.js":"52"},{"size":428,"mtime":1653918469019,"results":"53","hashOfConfig":"54"},{"size":909,"mtime":1653753812499,"results":"55","hashOfConfig":"54"},{"size":1197,"mtime":1653918531578,"results":"56","hashOfConfig":"54"},{"size":4245,"mtime":1652918603925,"results":"57","hashOfConfig":"54"},{"size":1235,"mtime":1649075114324,"results":"58","hashOfConfig":"54"},{"size":2588,"mtime":1651325114479,"results":"59","hashOfConfig":"54"},{"size":8401,"mtime":1650825033651,"results":"60","hashOfConfig":"54"},{"size":1240,"mtime":1652918527721,"results":"61","hashOfConfig":"54"},{"size":931,"mtime":1651326675259,"results":"62","hashOfConfig":"54"},{"size":3139,"mtime":1652919085209,"results":"63","hashOfConfig":"54"},{"size":1480,"mtime":1651326786741,"results":"64","hashOfConfig":"54"},{"size":486,"mtime":1653754285948,"results":"65","hashOfConfig":"54"},{"size":1499,"mtime":1650993139346,"results":"66","hashOfConfig":"54"},{"size":2165,"mtime":1652918981956,"results":"67","hashOfConfig":"54"},{"size":1815,"mtime":1648840271115,"results":"68","hashOfConfig":"54"},{"size":5087,"mtime":1651486443769,"results":"69","hashOfConfig":"54"},{"size":4240,"mtime":1650993493905,"results":"70","hashOfConfig":"54"},{"size":2940,"mtime":1651060934878,"results":"71","hashOfConfig":"54"},{"size":977,"mtime":1650841655550,"results":"72","hashOfConfig":"54"},{"size":513,"mtime":1648988238151,"results":"73","hashOfConfig":"54"},{"size":881,"mtime":1648989820966,"results":"74","hashOfConfig":"54"},{"size":1722,"mtime":1648992587539,"results":"75","hashOfConfig":"54"},{"size":3175,"mtime":1648994106326,"results":"76","hashOfConfig":"54"},{"size":493,"mtime":1648995302864,"results":"77","hashOfConfig":"54"},{"size":862,"mtime":1648994810493,"results":"78","hashOfConfig":"54"},{"size":1664,"mtime":1648996962987,"results":"79","hashOfConfig":"54"},{"size":3114,"mtime":1648996902196,"results":"80","hashOfConfig":"54"},{"size":1716,"mtime":1649080252488,"results":"81","hashOfConfig":"54"},{"size":6087,"mtime":1651326943051,"results":"82","hashOfConfig":"54"},{"size":925,"mtime":1649174287378,"results":"83","hashOfConfig":"54"},{"size":931,"mtime":1649678714079,"results":"84","hashOfConfig":"54"},{"size":7155,"mtime":1651489936560,"results":"85","hashOfConfig":"54"},{"size":4871,"mtime":1651483879362,"results":"86","hashOfConfig":"54"},{"size":4932,"mtime":1651484337370,"results":"87","hashOfConfig":"54"},{"size":5182,"mtime":1651483879362,"results":"88","hashOfConfig":"54"},{"size":6544,"mtime":1652208612432,"results":"89","hashOfConfig":"54"},{"size":3362,"mtime":1650846044150,"results":"90","hashOfConfig":"54"},{"size":863,"mtime":1649689235777,"results":"91","hashOfConfig":"54"},{"size":3220,"mtime":1650994768005,"results":"92","hashOfConfig":"54"},{"size":5068,"mtime":1651489241861,"results":"93","hashOfConfig":"54"},{"size":6076,"mtime":1651327053540,"results":"94","hashOfConfig":"54"},{"size":1964,"mtime":1651326262900,"results":"95","hashOfConfig":"54"},{"size":1373,"mtime":1650816003493,"results":"96","hashOfConfig":"54"},{"size":3148,"mtime":1651489301901,"results":"97","hashOfConfig":"54"},{"size":803,"mtime":1650999297148,"results":"98","hashOfConfig":"54"},{"size":2321,"mtime":1651491658419,"results":"99","hashOfConfig":"54"},{"size":2044,"mtime":1651001438021,"results":"100","hashOfConfig":"54"},{"size":3308,"mtime":1651061225791,"results":"101","hashOfConfig":"54"},{"size":2351,"mtime":1653752894045,"results":"102","hashOfConfig":"54"},{"size":1118,"mtime":1652904875458,"results":"103","hashOfConfig":"54"},{"size":2633,"mtime":1652919159611,"results":"104","hashOfConfig":"54"},{"size":2278,"mtime":1652919495508,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gc3lzh",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"115"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"115"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"115"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"115"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"115"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"115"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"115"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"115"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"115"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"115"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"115"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"115"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"115"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"115"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"115"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"115"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"115"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"115"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"115"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"115"},"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\index.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\App.js",["236"],"import React, {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/UserApi\";\nimport {Spinner} from \"react-bootstrap\";\n\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n             user.setUser(true)\n            user.setIsAuth(true)\n            user.setRole(data.role)\n            user.setUserId(data.id)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if(loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n  return (\n    <BrowserRouter>\n      <NavBar/>\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AppRouter.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\routes.js",[],["237","238"],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\Admin.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\MainPage.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\Auth.js",["239","240"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Card, Container, Form, Row} from \"react-bootstrap\";\r\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE} from \"../utils/Consts\";\r\nimport {login, registration} from \"../http/UserApi\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Alert, IconButton, Snackbar, TextField} from \"@mui/material\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport SvgSelectors from \"../components/SvgSelectors/SvgSelectors\";\r\n\r\nfunction CloseIcon(props) {\r\n    return null;\r\n}\r\n\r\nCloseIcon.propTypes = {fontSize: PropTypes.string};\r\n\r\n\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Email не может быть пустым')\r\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n    const [errorStatus, setErrorStatus] = useState('')\r\n    const [isHide, setIsHide] = useState(false);\r\n\r\n    const handleIsHide = () => {\r\n        setIsHide(isHide ? false : true)\r\n    }\r\n    const handleForm = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    },[emailError, passwordError])\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data\r\n            if(isLogin){\r\n                data = await login(email, password)\r\n            } else {\r\n                data = await registration(email, password)\r\n            }\r\n            user.setUser(user);\r\n            user.setIsAuth(true);\r\n            user.setUserId(data.id)\r\n            user.setRole(data.role)\r\n            history.push(MAIN_ROUTE)\r\n        } catch (e) {\r\n            setErrorStatus(e.response.data.message)\r\n            console.log(e.response.data.message)\r\n            handleClick()\r\n        }\r\n    }\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный mail')\r\n            if(!e.target.value){\r\n                setEmailError('mail не может быть пустым')\r\n            }\r\n        } else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 8){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 8')\r\n            if(!e.target.value){\r\n                setPasswordError('Пароль не может быть пустым')\r\n            }\r\n        } else {\r\n            setPasswordError(\"\")\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div style={{background: \"gray\"}}>\r\n            <Container\r\n                className='d-flex justify-content-center align-items-center'\r\n                style={{height: window.innerHeight - 54}}\r\n            >\r\n                <Card className='p-5' style={{width: 600, borderRadius: 20, linearGradient: 'red'}}>\r\n                    <h2 className='m-auto'>{isLogin? 'Авторизация' : 'Регистрация'}</h2>\r\n                    <Form className='d-flex flex-column' onSubmit={handleForm}>\r\n                        {(emailDirty && emailError) && <div style={{color: 'red'}}>{emailError}</div>}\r\n                        <TextField\r\n                            size='small'\r\n                            label='Введите ваш email...'\r\n                            variant=\"outlined\"\r\n                            id=\"outlined-basic\"\r\n                            onBlur={e => blurHandler(e)}\r\n                            name='email'\r\n                            className=\"mt-3\"\r\n                            value={email}\r\n                            onChange={e => emailHandler(e)}\r\n                        />\r\n                        {(passwordDirty && passwordError) && <div style={{color: 'red'}}>{[passwordError]}</div>}\r\n                        <div className='d-flex align-items-center justify-content-center position-relative'>\r\n                            <TextField\r\n                            size='small'\r\n                            label='Введите ваш пароль...'\r\n                            id=\"outlined-basic\"\r\n                            variant=\"outlined\"\r\n                            onBlur={e => blurHandler(e)}\r\n                            name='password'\r\n                            className=\"mt-3\"\r\n                            value={password}\r\n                            onChange={e => passwordHandler(e)}\r\n                            type={isHide ? \"text\": \"password\"}\r\n                            style={{width: '100%'}}\r\n                        />\r\n                            <div onClick={handleIsHide} className='isHide mt-3 position-absolute' style={{width: 30, right: 5, cursor: \"pointer\"}}><SvgSelectors id={isHide ? \"show\" : \"hide\"}/></div></div>\r\n                        <Row className='d-flex justify-content-between mt-3 pl-3 pr-3'>\r\n                            {isLogin?\r\n                                <div>\r\n                                    Нет аккаунта?\r\n                                    <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся</NavLink>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    Есть аккаунта?\r\n                                    <NavLink to={LOGIN_ROUTE}>Войдите</NavLink>\r\n                                </div>\r\n                            }\r\n\r\n                            <Button\r\n                                className='align-self-end'\r\n                                variant={\"outline-success\"}\r\n                                onClick={click}\r\n                            >\r\n                                {isLogin ?\r\n                                    'Войти'\r\n                                    :\r\n                                    'Регистрация'\r\n                                }\r\n                            < /Button>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <Snackbar\r\n                    anchorOrigin={{horizontal: 'center', vertical: 'top'}}\r\n                    open={open}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleClose}\r\n                    action={action}\r\n                >\r\n                    <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                        {errorStatus}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Auth;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\utils\\Consts.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\appeal\\userAppeal.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\NavBar.js",["241","242"],"import React, {useContext, useState} from 'react';\r\nimport {Button, Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {ADMIN_ROUTE,  EMPLOYEE_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, PROFILE_ROUTE} from \"../utils/Consts\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport ChooseChart from \"./modals/ChooseChart\";\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n    const [chooseVisible, setChooseVisible] = useState(false)\r\n\r\n    const logOut = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n        localStorage.setItem('token', '')\r\n        history.push(MAIN_ROUTE)\r\n    }\r\n\r\n    return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <NavLink style={{color: 'white'}} to={MAIN_ROUTE}>ФЗСН</NavLink>\r\n                    {user.isAuth ?\r\n                        user.role === \"ADMIN\"?\r\n                            <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                <Button variant={\"outline-light\"} onClick={()=> history.push(ADMIN_ROUTE)}>Админ панель </Button>\r\n                                <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                            </Nav>\r\n                            :\r\n                            user.role === \"USER\"?\r\n                                <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                    <Button variant={\"outline-light\"} onClick={()=> history.push(PROFILE_ROUTE)}>Профиль </Button>\r\n                                    <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                                </Nav>\r\n                                :\r\n                                user.role === \"EMPLOYEE\"?\r\n                                    <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                        <Button variant={\"outline-light\"} onClick={() => appeal.setIsHide(true)}>Статистика</Button>\r\n                                        <Button className='ml-2' variant={\"outline-light\"} onClick={()=> history.push(EMPLOYEE_ROUTE)}>Панель работника</Button>\r\n                                        <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                                        <ChooseChart show={appeal.isHide} onHide={appeal.isHide}/>\r\n                                    </Nav>\r\n                                    :\r\n                                    null\r\n                    :\r\n                        <Nav className='ml-auto'>\r\n                            <Button  variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизация</Button>\r\n                        </Nav>\r\n                    }\r\n                </Container>\r\n            </Navbar>\r\n\r\n    );\r\n});\r\n\r\nexport default NavBar;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\UserApi.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\index.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\creatAppeal.js",["243"],"import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Tab, Tabs} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\nimport TabNaturalAppeal from \"../../components/TabNaturalAppeal\";\r\nimport TabLegalEntityAppeal from \"../../components/TabLegalEntityAppeal\";\r\nimport {Context} from \"../../index\";\r\nimport {fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\n\r\nconst CreatAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchOrganizations().then(data => appeal.setOrganizations(data))\r\n        fetchDepartments().then(data => appeal.setDepartment(data))\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <Tabs className='mt-2' defaultActiveKey='home' variant={'pills'} id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"home\" title=\"Электронные обращения для граждан, в том числе индивидуальных предпринимателей\">\r\n                    <DropdownMenus />\r\n                    <TabNaturalAppeal />\r\n                </Tab>\r\n                <Tab eventKey=\"profile\"  title=\"Электронные обращения для юридических лиц\">\r\n                    <DropdownMenus />\r\n                    <TabLegalEntityAppeal />\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CreatAppeal;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\appeal\\Appeal.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabLegalEntityAppeal.js",[],["244","245"],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\TabLegalEntityAppeal.js",["246"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Container, Form, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {fetchUser} from \"../http/UserApi\";\r\nimport {creatElectronicAppeal} from \"../http/AppealApi\";\r\n\r\nconst TabLegalEntityAppeal = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n\r\n    const [nameLegalEntity, setNameLegalEntity] = useState('')\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [home_address, setHome_address] = useState('');\r\n    const [phone_number, setPhone_number] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [img, setImg] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUser(user.id).then(data => {\r\n            setName(data[0].username)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n            setEmail(data[0].email)\r\n        })\r\n    }, [])\r\n\r\n    const selectImg = e =>{\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const selectFile = e =>{\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addLegalEntityAppeal = () => {\r\n        const formData = new FormData()\r\n        formData.append('nameLegal', nameLegalEntity)\r\n        formData.append('statusLegal', 'true')\r\n        formData.append('name', name)\r\n        formData.append('surname', surname)\r\n        formData.append('home_address', home_address)\r\n        formData.append('phone_number', phone_number)\r\n        formData.append('content', content)\r\n        formData.append('img', img)\r\n        formData.append('file', file)\r\n        formData.append('userId', user.userId)\r\n        formData.append('organizationAddressId', appeal.selectedOrganization.id)\r\n        formData.append('departmentAppealId', appeal.selectedDepartment.id)\r\n        creatElectronicAppeal(formData).then(data => console.log('all right'))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form className='d-flex flex-column'>\r\n                <Form.Control\r\n                    className='mt-3'\r\n                    placeholder='Полное наименование юридического лица'\r\n                    value={nameLegalEntity? nameLegalEntity : ''}\r\n                    onChange={e => setNameLegalEntity(e.target.value)}\r\n                />\r\n                <Row className='d-flex mt-3 pl-3 pr-3'>\r\n                    <Form.Control\r\n                        placeholder='Введите ваше имя'\r\n                        className='mt-3'\r\n                        style={{width: 300}}\r\n                        value={name? name : ''}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        placeholder='Введите вашу фамилию'\r\n                        className='mt-3 ml-2'\r\n                        style={{width: 300}}\r\n                        value={surname? surname : ''}\r\n                        onChange={e => setSurname(e.target.value)}\r\n                    />\r\n                </Row>\r\n                <Form.Control\r\n                    placeholder='Адрес (адрес организации (места регистрации))'\r\n                    className='mt-3'\r\n                    value={home_address? home_address : ''}\r\n                    onChange={e => setHome_address(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='E-mail (адрес электронной почты заявителя)'\r\n                    className='mt-3'\r\n                    value={email? email : ''}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='Суть обращения'\r\n                    className='mt-3'\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    onChange={e => setContent(e.target.value)}\r\n                />\r\n                <br/>\r\n                <h4>Прикрепите фото</h4>\r\n                <Form.Control\r\n                    placeholder=''\r\n                    className='mt-3'\r\n                    type = 'file'\r\n                    onChange={selectImg}\r\n                />\r\n                <br/>\r\n                <h4>Прикрепите файл</h4>\r\n                <Form.Control\r\n                    placeholder='Прикрепите файл'\r\n                    className='mt-3'\r\n                    type = 'file'\r\n                    onChange={selectFile}\r\n                />\r\n                <Button onClick={addLegalEntityAppeal} className='mt-2 mb-3' variant={\"outline-success\"}>Отправить</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default TabLegalEntityAppeal;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\TabNaturalAppeal.js",["247"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Form, Row} from \"react-bootstrap\";\r\nimport {creatElectronicAppeal} from \"../http/AppealApi\";\r\nimport {Context} from \"../index\";\r\nimport {fetchUser} from \"../http/UserApi\";\r\n\r\nconst TabNaturalAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n    const [essence, setEssence] = useState('')\r\n    const [img, setImg] = useState(null)\r\n    const [file, setFile] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUser(user.userId).then(data =>{\r\n\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n            setEmail(data[0].email)\r\n        })\r\n    },[])\r\n\r\n    const selectImg = e =>{\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const selectFile = e =>{\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    const addAppeal = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('surname', surname)\r\n        formData.append('home_address', home_address)\r\n        formData.append('phone_number', phone_number)\r\n        formData.append('content', essence)\r\n        formData.append('img', img)\r\n        formData.append('file', file)\r\n        formData.append('userId', user.userId)\r\n        formData.append('organizationAddressId', appeal.selectedOrganization.id)\r\n        formData.append('departmentAppealId', appeal.selectedDepartment.id)\r\n        creatElectronicAppeal(formData).then()\r\n    }\r\n\r\n    return (\r\n        <Form className='d-flex flex-column'>\r\n            <Row className='d-flex mt-3 pl-3 pr-3'>\r\n                <Form.Control\r\n                    placeholder='Введите ваше имя'\r\n                    className='mt-3'\r\n                    style={{width: 300}}\r\n                    value={name? name : ''}\r\n                    onChange={e => setName(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='Введите вашу фамилию'\r\n                    className='mt-3 ml-2'\r\n                    style={{width: 300}}\r\n                    value={surname? surname:''}\r\n                    onChange={e => setSurname(e.target.value)}\r\n                />\r\n            </Row>\r\n            <Form.Control\r\n                placeholder='Адрес (адрес места жительства (места пребывания))'\r\n                className='mt-3'\r\n                value={home_address? home_address : ''}\r\n                onChange={e => setHome_address(e.target.value)}\r\n            />\r\n            <Form.Control\r\n                placeholder='E-mail (адрес электронной почты заявителя)'\r\n                className='mt-3'\r\n                value={email? email : ''}\r\n                onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <Form.Control\r\n                placeholder='Суть обращения'\r\n                className='mt-3'\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={essence? essence : ''}\r\n                onChange={e => setEssence(e.target.value)}\r\n            />\r\n            <br/>\r\n            <h4>Прикрепите фото</h4>\r\n            <Form.Control\r\n                className='mt-3'\r\n                type = 'file'\r\n                onChange={selectImg}\r\n            />\r\n            <br/>\r\n            <h4>Прикрепите файл</h4>\r\n            <Form.Control\r\n                className='mt-3'\r\n                type = 'file'\r\n                onChange={selectFile}\r\n            />\r\n            <Button onClick={addAppeal} className='mt-2 mb-3' variant={\"outline-success\"}>Отправить</Button>\r\n        </Form>\r\n\r\n    );\r\n});\r\n\r\nexport default TabNaturalAppeal;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\http\\AppealApi.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\EmployeePage.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDOrganization.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\CreatOrganization.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\OrganizationList.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\organizationCRUD\\EditOrganiztion.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDDepartment.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\CreatDepartment.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\DepartmentList.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\departmentCRUD\\EditDepartment.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\ChoosingEmployeeAction.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\RegistrationNewEmployee.js",["248","249"],"import React, {useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Container, Form} from \"react-bootstrap\";\r\nimport {Alert, IconButton, Snackbar, TextField} from \"@mui/material\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CRUD_EMPLOYEE_ROUTE} from \"../../utils/Consts\";\r\nimport {registration} from \"../../http/UserApi\";\r\n\r\nfunction CloseIcon(props) {\r\n    return null;\r\n}\r\n\r\nCloseIcon.propTypes = {fontSize: PropTypes.string};\r\nconst RegistrationNewEmployee = observer(() => {\r\n\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Email не может быть пустым')\r\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n    const [errorStatus, setErrorStatus] = useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    },[emailError, passwordError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный mail')\r\n            if(!e.target.value){\r\n                setEmailError('mail не может быть пустым')\r\n            }\r\n        } else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 8){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 8')\r\n            if(!e.target.value){\r\n                setPasswordError('Пароль не может быть пустым')\r\n            }\r\n        } else {\r\n            setPasswordError(\"\")\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data = await registration(email, password, 'EMPLOYEE')\r\n            if(data){\r\n                history.push(CRUD_EMPLOYEE_ROUTE)\r\n            }\r\n        } catch (e) {\r\n            setErrorStatus(e.response.data.message)\r\n            console.log(e.response.data.message)\r\n            handleClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className='d-flex justify-content-center align-items-center'\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card className='p-5' style={{width: 600}}>\r\n                <h2 className='m-auto'>Регистрация оператора</h2>\r\n                {(emailDirty && emailError) && <div style={{color: 'red'}}>{emailError}</div>}\r\n                <Form className='d-flex flex-column'>\r\n                    <TextField\r\n                        size='small'\r\n                        label='Введите email оператора...'\r\n                        variant=\"outlined\"\r\n                        id=\"outlined-basic\"\r\n                        onBlur={e => blurHandler(e)}\r\n                        name='email'\r\n                        className=\"mt-3\"\r\n                        value={email}\r\n                        onChange={e => emailHandler(e)}\r\n                    />\r\n                    {(passwordDirty && passwordError) && <div style={{color: 'red'}}>{[passwordError]}</div>}\r\n                    <TextField\r\n                        size='small'\r\n                        label='Введите пароль для оператора...'\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        onBlur={e => blurHandler(e)}\r\n                        name='password'\r\n                        className=\"mt-3\"\r\n                        value={password}\r\n                        onChange={e => passwordHandler(e)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Button\r\n                        className='mt-3'\r\n                        variant={\"outline-success\"}\r\n                        onClick={click}\r\n                    >\r\n                        Регистрация сотрудника\r\n                    </Button>\r\n                </Form>\r\n            </Card>\r\n            <Snackbar\r\n                anchorOrigin={{horizontal: 'center', vertical: 'top'}}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n                action={action}\r\n            >\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {errorStatus}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default RegistrationNewEmployee;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\adminPages\\CRUDEmployee.js",["250"],"import React, { useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport EmployeeList from \"../../components/CRUD/employeeCRUD/EmployeeList\";\r\nimport {fetchEmployees} from \"../../http/UserApi\";\r\n\r\nconst CrudEmployee = observer(() => {\r\n\r\n    const [employee, setEmployee] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchEmployees().then(data => setEmployee(data))\r\n        console.log(employee)\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='mt-2'>\r\n                <Col md={9}>\r\n                    <Row className='d-flex'>\r\n                        {employee.map(emp =>\r\n                            <EmployeeList key={emp.id} emp={emp}/>\r\n                        )}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CrudEmployee;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\employeeCRUD\\EmployeeList.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\CRUD\\employeeCRUD\\EmployeeProfile.js",["251","252"],"import React, {Fragment, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Form, FormControl, Row} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {deleteUser, fetchUser, updateUser} from \"../../../http/UserApi\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {CRUD_EMPLOYEE_ROUTE} from \"../../../utils/Consts\";\r\nimport {FaSave} from \"react-icons/fa\";\r\n\r\n\r\n\r\nconst EmployeeProfile = observer( () => {\r\n    const [email, setEmail] = useState( '')\r\n    const [name, setName] = useState( '')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n    const {id} = useParams()\r\n    const history= useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchUser(id).then(data => {\r\n            setEmail(data[0].email)\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const updName = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('name', name)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updSurname = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('surname', surname)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updPhone_number = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('phone_number', phone_number)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updHome_address = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('delivery_address', home_address)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const delEmployee = async () => {\r\n        try{\r\n            deleteUser(id).then()\r\n            history.push(CRUD_EMPLOYEE_ROUTE)\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"rounded bg-white mt-5 mb-5\">\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md={4} className=\"border-right\">\r\n                        <Col className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                            <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\r\n                            <span className=\"font-weight-bold\">{name? name : null}</span>\r\n                            <span className=\"text-black-50\"></span>{email}<span> </span>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col md={8} className=\"border-right\">\r\n                        <Col className=\"p-3 py-5\">\r\n                            <Col className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <h4 className=\"text-right\">Настройка профиля оператора</h4>\r\n                            </Col>\r\n                            <Row className=\"mt-2\">\r\n                                <Col md={4}>\r\n                                    <label className=\"labels\">Имя</label>\r\n                                    <Form>\r\n                                        <FormControl\r\n                                            type=\"text\"\r\n                                            value={name? name : ''}\r\n                                            placeholder=\"Введите имя\"\r\n                                            onChange={e=> setName(e.target.value)}\r\n                                        />\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updName}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={4}><label className=\"labels\">Фамилия</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={surname? surname : ''}\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        onChange={e=> setSurname(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updSurname}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                                <Col md={10}><label className=\"labels\">Мобильный номер</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите мобильный номер\"\r\n                                        value={phone_number? phone_number : ''}\r\n                                        onChange={e=> setPhone_number(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updPhone_number}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={10}><label className=\"labels\">Адрес проживание</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите место проживание\"\r\n                                        value={home_address? home_address : ''}\r\n                                        onChange={e=> setHome_address(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updHome_address}><FaSave /></button>\r\n                                </Col>\r\n                                <Col  className='d-flex align-items-end'>\r\n                                    <Button className='d-flex mt-3' variant={\"outline-danger\"} onClick={delEmployee}>Удалить оператора из базы данных</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EmployeeProfile;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\NaturalEntityAppealTab.js",["253","254"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport Pages from \"../Pages\";\r\n\r\nconst NaturalEntityAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals('false',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals('false',appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>Организация</th>\r\n                    <th>Деятельность</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрении' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default NaturalEntityAppealTab;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\AnonAppealTab.js",["255","256","257"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {ANON_APPEAL_ITEM_ROUTE, APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../Pages\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {deleteAppeal, fetchAnonAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\n\r\nconst AnonAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAnonAppeals(null, null, 'notreviewed',\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n    console.log(appeal.appeals)\r\n\r\n    useEffect(() => {\r\n        fetchAnonAppeals(appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    console.log(appeal.appeals)\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>Организация</th>\r\n                    <th>Деятельность</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(ANON_APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрении' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AnonAppealTab;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\tabs\\LegalEntityAppealTab.js",["258","259","260","261","262"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Context} from \"../../index\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../Pages\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst LegalEntityAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals(true,null, null, 'null',\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n    console.log(appeal.appeals)\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(true, appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex align-items-center justify-content-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Все обращений')\r\n                                setSelectedStatusData(null)\r\n                            }}\r\n\r\n                            >Все обращений</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>ФИО</th>\r\n                    <th>Организация</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status == 'notreviewed'? 'Не рассмотрен' : appeal.status == 'viewed'? 'В процессе рассмотрении' : appeal.status == 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default LegalEntityAppealTab;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\Profile.js",["263","264"],"import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {Col, Container, Form, FormControl, Row} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {fetchUser, updateUser} from \"../../http/UserApi\";\r\nimport {Context} from \"../../index\";\r\nimport {FaSave} from \"react-icons/fa\";\r\n\r\nconst Profile = observer( () => {\r\n    const {user} = useContext(Context)\r\n    const [name, setName] = useState( '')\r\n    const [email, setEmail] = useState( '')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchUser(user.userId).then(data => {\r\n            setEmail(data[0].email)\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n        })\r\n    }, [])\r\n\r\n    const updName = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('name', name)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updSurname = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('surname', surname)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updPhone_number = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('phone_number', phone_number)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updDelivery_address = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('home_address', home_address)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"rounded bg-white mt-5 mb-5\">\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md={4} className=\"border-right\">\r\n                        <Col className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                            <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\r\n                            <span className=\"font-weight-bold\">{name? name : null}</span>\r\n                            <span className=\"text-black-50\"></span>{email? email : null}<span> </span>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col md={8} className=\"border-right\">\r\n                        <Col className=\"p-3 py-5\">\r\n                            <Col className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <h4 className=\"text-right\">Настройка профиля</h4>\r\n                            </Col>\r\n                            <Row className=\"mt-2\">\r\n                                <Col md={4}>\r\n                                    <label className=\"labels\">Имя</label>\r\n                                    <Form>\r\n                                        <FormControl\r\n                                            type=\"text\"\r\n                                            value={name? name : ''}\r\n                                            placeholder=\"Введите имя\"\r\n                                            onChange={e=> setName(e.target.value)}\r\n                                        />\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updName}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={4}><label className=\"labels\">Фамилия</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={surname? surname : ''}\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        onChange={e=> setSurname(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updSurname}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                                <Col md={10}><label className=\"labels\">Мобильный номер</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите мобильный номер\"\r\n                                        value={phone_number? phone_number : ''}\r\n                                        onChange={e=> setPhone_number(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updPhone_number}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={10}><label className=\"labels\">Адрес проживание</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"введите адрес проживаний\"\r\n                                        value={home_address? home_address : ''}\r\n                                        onChange={e=> setHome_address(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updDelivery_address}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Profile;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewHistory.js",["265","266","267"],"import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ViewHistory = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history= useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,'reviewed',\r\n            9,1, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,'reviewed',\r\n            9,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n        })\r\n    }, [appeal.page])\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    console.log(historyAppeal)\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {historyAppeal?\r\n                <Container>\r\n                    <Fragment>\r\n                        <table className=\"table mt-5 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id}>\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status == 'reviewed'? 'Рассмотрен' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n                :\r\n                <h1 className='d-flex align-items-center justify-content-center mt-5'>\r\n                    История обращения пустая\r\n                </h1>\r\n            }\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ViewHistory;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\Pages.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewActApp.js",["268","269","270"],"import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\n\r\nconst ViewActApp = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,\r\n            'viewed',1,9, user.userId).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null,null, 'viewed',\r\n            2,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [appeal.page])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n                <Container>\r\n                    <Fragment>\r\n                        <table className=\"table mt-5 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status == 'viewed'? 'В процессе рассмотрений' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ViewActApp;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AppealItem.js",["271","272"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Col, Container, Dropdown, Image, Row} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneAppeal, updateStatus} from \"../http/AppealApi\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {Context} from \"../index\";\r\nimport Mailer from \"./Mailer\";\r\n\r\nconst AppealItem = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {id} = useParams();\r\n    const [oneAppeal, setOneAppeal] = useState({})\r\n    const [chooseVisible, setChooseVisible] = useState(false)\r\n\r\n\r\n    useEffect(()=> {\r\n        fetchOneAppeal(id).then(data => {\r\n            setOneAppeal(data)\r\n            setOneAppeal(data)\r\n        })\r\n        },[])\r\n    console.log(oneAppeal)\r\n\r\n    const updStatus = async (status) => {\r\n        try {\r\n            console.log(status)\r\n            updateStatus({status: status},id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className='d-flex flex-column'>\r\n            <Card\r\n                style={{width: 1130, height: 350, border: '5px solid lightgray'}}\r\n                className='mt-3 p-2'\r\n            >\r\n                <Row className='d-flex flex-row align-items-start justify-content-center mt-3'>\r\n                    <Col md={4}>\r\n                        <div style={{background:'lightgray'}} className='d-flex mt-3'> Статус обращения: {oneAppeal?.status == 'notreviewed'? \"Не рассмотрено\" : null}</div>\r\n                        <div style={{background:'transparent'}} className='d-flex mt-3'> Фио: {oneAppeal?.name} {oneAppeal?.surname}</div>\r\n                        <div style={{background:'lightgray'}} className='d-flex mt-3'> Адрес проживания: {oneAppeal?.home_address} </div>\r\n                        <div style={{background:'transparent'}} className='d-flex mt-3'> Email почта: {oneAppeal?.user?.email}</div>\r\n                        {oneAppeal?.nameLegal?\r\n                            <div style={{background:'lightgray'}} className='d-flex mt-3'> Название Юридического лица: {oneAppeal?.nameLegal? oneAppeal?.nameLegal : null}</div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Image style={{width: 300, height: 300}} src={'http://localhost:5000/' + oneAppeal?.img}/>\r\n                    </Col>\r\n                    <Col md={4} >\r\n                        <div className='d-flex flex-column justify-content-between mt-3 mb-3'>\r\n                            <span >Ниже можно скачать прикрепленный файл</span>\r\n                            <Button className='mt-5' variant={\"outline-success\"} href={'http://localhost:5000/' + oneAppeal?.file}>Скачать файл</Button>\r\n                            {\r\n                                user.role === 'EMPLOYEE'?\r\n                                    <div>\r\n                                        <Dropdown className='mt-3'>\r\n                                            <DropdownToggle>{oneAppeal?.status === 'notreviewed'? 'Не рассмотрен' : oneAppeal?.status === 'viewed'? 'В процессе рассмотрений' : oneAppeal?.status === 'reviewed'? 'Рассмотрен' : 'Статус обращений'}</DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <Dropdown.Item onClick={() => updStatus('notreviewed')} >Не рассмотрен</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('viewed')}>В процессе рассмотрений</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('reviewed')}>Рассмотрен</Dropdown.Item>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                        <Button variant={\"outline-dark\"} className='mt-3 p-2' onClick={() => setChooseVisible(true)}>Ответ на электронную почту</Button>\r\n                                        <Mailer oneAppeal={oneAppeal} show={chooseVisible} onHide={() => setChooseVisible(false)} />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <br/>\r\n            <Row>\r\n                <div className='d-flex'> Суть обращения: {oneAppeal?.content}</div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AppealItem;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\viewNotActApp.js",["273","274"],"import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Dropdown, Row} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\n\r\nconst viewNotActApp = observer(() => {\r\n    const [viewNotActApp, setViewNotActApp] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals(null, null, null, null,\r\n            9,1, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, appeal.selectedOrganization.id,appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setViewNotActApp(viewNotActApp.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n                <Container>\r\n                    <Fragment>\r\n                        <Row className='d-flex flex-row justify-content-center mt-3'>\r\n                            <div className='d-flex  align-items-center justify-content-center'>\r\n                                <DropdownMenus />\r\n                                <Dropdown className='ml-4' >\r\n                                    <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                                    <DropdownMenu >\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Не рассмотрено')\r\n                                            setSelectedStatusData('notreviewed')\r\n                                        }}>Не рассмотрено</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('В процессе рассмотрении')\r\n                                            setSelectedStatusData('viewed')\r\n                                        }}>В процессе рассмотрении</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Рассмотрен')\r\n                                            setSelectedStatusData('reviewed')\r\n                                        }}>Рассмотрен</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Все обращений')\r\n                                            setSelectedStatusData(null)\r\n                                        }}\r\n\r\n                                        >Все обращений</Dropdown.Item>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Row>\r\n                        <table className=\"table mt-4 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрений' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default viewNotActApp;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\DropdownMenus.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\SvgSelectors\\SvgSelectors.js",["275"],"import React from \"react\";\r\n\r\n\r\nconst SvgSelectors = ({ id }) => {\r\n  switch (id) {\r\n\r\n    case \"show\":\r\n      return (\r\n        <svg  viewBox=\"0 -16 544 544\" xmlns=\"http://www.w3.org/2000/svg\" ><title>Показать пароль</title><path d=\"M272 400Q205 400 151 361 96 322 64 256 96 190 151 151 205 112 272 112 336 112 392 153 448 193 480 256 448 319 392 360 336 400 272 400ZM272 352Q312 352 340 324 368 296 368 256 368 216 340 188 312 160 272 160 232 160 204 188 176 216 176 256 176 296 204 324 232 352 272 352ZM272 312Q249 312 233 296 216 279 216 256 216 233 233 217 249 200 272 200 295 200 312 217 328 233 328 256 328 279 312 296 295 312 272 312Z\" /></svg>\r\n\r\n      );\r\n    case \"hide\":\r\n        return (\r\n          <svg  viewBox=\"0 -16 544 544\" xmlns=\"http://www.w3.org/2000/svg\" ><title>Скрыть пароль</title><path d=\"M108 60L468 420 436 452 362 378Q321 400 272 400 208 400 154 361 99 322 64 256 79 229 102 202 124 174 144 160L76 92 108 60ZM368 256Q368 216 340 188 312 160 272 160L229 117Q254 112 272 112 337 112 392 152 446 192 480 256 474 269 461 288 448 307 434 322L368 256ZM272 352Q299 352 322 338L293 309Q283 312 272 312 249 312 233 296 216 279 216 256 216 247 220 236L190 206Q176 229 176 256 176 296 204 324 232 352 272 352Z\" /></svg>\r\n      );\r\n\r\n    default:\r\n      return <svg></svg>;\r\n      break;\r\n  }\r\n};\r\n\r\nexport default SvgSelectors;\r\n","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\Mailer.js",["276"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport emailjs from 'emailjs-com'\r\nimport {Box, Modal} from \"@mui/material\";\r\n\r\n\r\nconst Mailer = observer(({show, onHide, oneAppeal}) => {\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    function sendEmail(e){\r\n        e.preventDefault()\r\n        emailjs.sendForm('service_xyt2vtn',\r\n            'template_9nyoeit', e.target, 'OdNl7gdZKkEzQnOwt'\r\n        ).then(res => {\r\n            console.log(res)\r\n\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 600,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={show}\r\n                onClose={onHide}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                        <div\r\n                            className='container border'\r\n                            style={{marginTop: '10px', width: '100%'}}\r\n                        >\r\n                            <h1 style={{marginTop: '25px'}}>Форма отправки ответа</h1>\r\n                            <form\r\n                                className='row'\r\n                                style={{margin: '25px 85px 75px 100px'}}\r\n                                onSubmit={sendEmail}\r\n                            >\r\n                                <label>ФИО</label>\r\n                                <input type='text' name='name' className='form-control'/>\r\n\r\n                                <label>Email</label>\r\n                                <input type='email' name='user_email' className='form-control'/>\r\n\r\n                                <label>Сообщение</label>\r\n                                <input name='message' rows='4'className='form-control'/>\r\n\r\n                                <label>Организация</label>\r\n                                <input className='form-control' type='text' name='organization' defaultValue={oneAppeal?.organization_address?.organization_name}/>\r\n\r\n                                <label>Деятельность</label>\r\n                                <input className='form-control' type='text' name='department' defaultValue={oneAppeal?.department_appeal?.department}/>\r\n\r\n                                <label>Дата обращении</label>\r\n                                <input className='form-control' type='date' name='dateAppeal' defaultValue={getDateWithoutTime(oneAppeal?.createdAt)}/>\r\n\r\n                                <input type='submit' value='Send' className='form-control btn btn-primary mt-3' />\r\n                            </form>\r\n                        </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Mailer;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\userPages\\CreateAnonAppeal.js",["277"],"import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\nimport {Context} from \"../../index\";\r\nimport {fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport AnonAppeal from \"../../components/AnonAppeal\";\r\n\r\nconst CreateAnonAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchOrganizations().then(data => appeal.setOrganizations(data))\r\n        fetchDepartments().then(data => appeal.setDepartment(data))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <DropdownMenus />\r\n            <AnonAppeal />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CreateAnonAppeal;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AnonAppeal.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\InformationalWarning.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\AnonAppealItem.js",["278"],"import React, { useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Col, Container, Dropdown, Image, Row} from \"react-bootstrap\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneAnonAppeal, updateAnonStatus} from \"../http/AppealApi\";\r\n\r\nconst AnonAppealItem = observer(() => {\r\n    const {id} = useParams();\r\n    const [oneAppeal, setOneAppeal] = useState({})\r\n\r\n\r\n    useEffect(()=> {\r\n        fetchOneAnonAppeal(id).then(data => {\r\n            setOneAppeal(data)\r\n        })\r\n    },[])\r\n    console.log(oneAppeal)\r\n\r\n    const updStatus = async (status) => {\r\n        try {\r\n            console.log(status)\r\n            updateAnonStatus({status: status},id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex flex-column'>\r\n            <Card\r\n                style={{width: 1130, height: 350, border: '5px solid lightgray'}}\r\n                className='mt-3 p-2'\r\n            >\r\n                <Row className='d-flex flex-row align-items-start justify-content-center mt-3'>\r\n\r\n                    <Col md={4}>\r\n                        <Image style={{width: 300, height: 300}} src={'http://localhost:5000/' + oneAppeal?.img}/>\r\n                    </Col>\r\n                    <Col md={4} >\r\n                        <div className='d-flex flex-column justify-content-between mt-3 mb-3'>\r\n                            <span >Ниже можно скачать прикрепленный файл</span>\r\n                            <Button className='mt-5' variant={\"outline-success\"} href={'http://localhost:5000/' + oneAppeal?.file}>Скачать файл</Button>\r\n\r\n                                    <div>\r\n                                        <Dropdown className='mt-3'>\r\n                                            <DropdownToggle>{oneAppeal?.status === 'notreviewed'? 'Не рассмотрен' : oneAppeal?.status === 'viewed'? 'В процессе рассмотрений' : oneAppeal?.status === 'reviewed'? 'Рассмотрен' : 'Статус обращений'}</DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <Dropdown.Item onClick={() => updStatus('notreviewed')} >Не рассмотрен</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('viewed')}>В процессе рассмотрений</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('reviewed')}>Рассмотрен</Dropdown.Item>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <br/>\r\n            <Row>\r\n                <div className='d-flex'> Суть обращения: {oneAppeal?.content}</div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AnonAppealItem;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\Diagram.js",["279","280"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Chart from \"./Chart\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"@mui/material\";\r\n\r\nconst Diagram = observer(() => {\r\n\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n\r\n        fetchAppeals('false',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n\r\n\r\n\r\n    const stringOrder = []\r\n    for (let i = 0; i < appeal.appeals.length; i++) {\r\n        stringOrder[i] = appeal.appeals[i].organization_address.organization_name\r\n    }\r\n\r\n\r\n    var result = {};\r\n    stringOrder.forEach(function (a) {\r\n        result[a] = result[a] + 1 || 1;\r\n    });\r\n\r\n    var j = 0\r\n    var Names = []\r\n    var counts = []\r\n    for (var key in result){\r\n        Names[j] = key\r\n        counts[j] = result[key]\r\n        j++\r\n    }\r\n        console.log(Names)\r\n        console.log(counts)\r\n    console.log(result)\r\n\r\n\r\n    const [pieDate, setPieDate] = useState({\r\n        labels: Names,\r\n        datasets: [{\r\n            label: 'gained',\r\n            data: counts,\r\n            backgroundColor:  [\r\n                'rgba(250,0,0,0.2)',\r\n                'rgba(55,255,0,0.2)',\r\n                'rgba(84,0,82,0.2)',\r\n                'rgba(231,238,5,0.2)',\r\n                'rgba(7,203,248,0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgb(79,203,11)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }]\r\n    });\r\n\r\n    return (\r\n       <Container>\r\n           <div className='d-flex justify-content-center align-items-center mt-5 flex-wrap'>\r\n               <div className='mb-3' style={{width: '900px'}}>\r\n                   <Chart chartDate={pieDate}/>\r\n               </div>\r\n               <h3>Статистика по областям физических лиц</h3>\r\n           </div>\r\n       </Container>\r\n    );\r\n});\r\n\r\nexport default Diagram;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\Chart.js",[],"D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\components\\modals\\ChooseChart.js",["281","282","283"],"import React, {useContext, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Box, Modal, Typography} from \"@mui/material\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {\r\n    CRUD_EMPLOYEE_ROUTE,\r\n    DIAGRAM_ROUTE,\r\n    DIAGRAM_SECOND_ROUTE,\r\n    REGISTRATION_EMPLOYEE_ROUTE\r\n} from \"../../utils/Consts\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\n\r\nconst ChooseChart = ({show, onHide}) => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    const handleDiagramFirst = async () => {\r\n\r\n        await fetchAppeals('false', null, null, null,\r\n            9, 1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n        history.push(DIAGRAM_ROUTE)\r\n\r\n        appeal.setIsHide(false)\r\n    }\r\n\r\n    const handleDiagramSecond = async () => {\r\n        show=false\r\n        await fetchAppeals('true', null, null, null,\r\n            9, 1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n        history.push(DIAGRAM_SECOND_ROUTE)\r\n        appeal.setIsHide(false)\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={show}\r\n                onClose={onHide}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Выберите действие\r\n                    </Typography>\r\n                    <Typography className='d-flex flex-column' id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={handleDiagramFirst}>Статистика по областям физических лиц</Button>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={handleDiagramSecond}>Статистика по областям юридических лиц</Button>\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChooseChart;","D:\\Bguir\\4-curs\\2\\diplom\\diplom\\online-service-for-electronic-appeal_v2\\client\\src\\pages\\employeePages\\DiagramLegal.js",["284","285"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Chart from \"./Chart\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\n\r\nconst DiagramLegal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n\r\n        fetchAppeals('true',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n\r\n    const stringOrder = []\r\n    for (let i = 0; i < appeal.appeals.length; i++) {\r\n        stringOrder[i] = appeal.appeals[i].organization_address.organization_name\r\n    }\r\n\r\n\r\n    var result = {};\r\n    stringOrder.forEach(function (a) {\r\n        result[a] = result[a] + 1 || 1;\r\n    });\r\n\r\n    var j = 0\r\n    var Names = []\r\n    var counts = []\r\n    for (var key in result){\r\n        Names[j] = key\r\n        counts[j] = result[key]\r\n        j++\r\n    }\r\n\r\n\r\n\r\n    const [pieDate, setPieDate] = useState({\r\n        labels: Names,\r\n        datasets: [{\r\n            label: 'gained',\r\n            data: counts,\r\n            backgroundColor:  [\r\n                'rgba(250,0,0,0.2)',\r\n                'rgba(55,255,0,0.2)',\r\n                'rgba(84,0,82,0.2)',\r\n                'rgba(231,238,5,0.2)',\r\n                'rgba(7,203,248,0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgb(79,203,11)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }]\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Container>\r\n          <div className='d-flex justify-content-center align-items-center mt-5 flex-wrap'>\r\n              <div className='mb-3' style={{width: '900px'}}>\r\n                  <Chart chartDate={pieDate}/>\r\n              </div>\r\n              <h3>Статистика по областям юридических лиц</h3>\r\n          </div>\r\n      </Container>\r\n    );\r\n});\r\n\r\nexport default DiagramLegal;",{"ruleId":"286","severity":1,"message":"287","line":23,"column":8,"nodeType":"288","endLine":23,"endColumn":10,"suggestions":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":31,"column":12,"nodeType":"296","messageId":"297","endLine":31,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":70,"column":9,"nodeType":"300","messageId":"301","endLine":77,"endColumn":10},{"ruleId":"294","severity":1,"message":"302","line":13,"column":12,"nodeType":"296","messageId":"297","endLine":13,"endColumn":25},{"ruleId":"294","severity":1,"message":"303","line":13,"column":27,"nodeType":"296","messageId":"297","endLine":13,"endColumn":43},{"ruleId":"286","severity":1,"message":"304","line":16,"column":7,"nodeType":"288","endLine":16,"endColumn":9,"suggestions":"305"},{"ruleId":"290","replacedBy":"306"},{"ruleId":"292","replacedBy":"307"},{"ruleId":"286","severity":1,"message":"308","line":32,"column":8,"nodeType":"288","endLine":32,"endColumn":10,"suggestions":"309"},{"ruleId":"286","severity":1,"message":"310","line":32,"column":7,"nodeType":"288","endLine":32,"endColumn":9,"suggestions":"311"},{"ruleId":"294","severity":1,"message":"295","line":25,"column":12,"nodeType":"296","messageId":"297","endLine":25,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":38,"column":9,"nodeType":"300","messageId":"301","endLine":45,"endColumn":10},{"ruleId":"286","severity":1,"message":"312","line":14,"column":8,"nodeType":"288","endLine":14,"endColumn":10,"suggestions":"313"},{"ruleId":"286","severity":1,"message":"314","line":28,"column":8,"nodeType":"288","endLine":28,"endColumn":10,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":79,"column":29,"nodeType":"318","endLine":79,"endColumn":227},{"ruleId":"286","severity":1,"message":"304","line":30,"column":7,"nodeType":"288","endLine":30,"endColumn":9,"suggestions":"319"},{"ruleId":"286","severity":1,"message":"304","line":39,"column":7,"nodeType":"288","endLine":39,"endColumn":96,"suggestions":"320"},{"ruleId":"294","severity":1,"message":"321","line":7,"column":33,"nodeType":"296","messageId":"297","endLine":7,"endColumn":50},{"ruleId":"286","severity":1,"message":"304","line":30,"column":7,"nodeType":"288","endLine":30,"endColumn":9,"suggestions":"322"},{"ruleId":"286","severity":1,"message":"304","line":40,"column":7,"nodeType":"288","endLine":40,"endColumn":96,"suggestions":"323"},{"ruleId":"286","severity":1,"message":"304","line":30,"column":7,"nodeType":"288","endLine":30,"endColumn":9,"suggestions":"324"},{"ruleId":"286","severity":1,"message":"304","line":40,"column":7,"nodeType":"288","endLine":40,"endColumn":96,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":95,"column":44,"nodeType":"328","messageId":"329","endLine":95,"endColumn":46},{"ruleId":"326","severity":1,"message":"327","line":95,"column":94,"nodeType":"328","messageId":"329","endLine":95,"endColumn":96},{"ruleId":"326","severity":1,"message":"327","line":95,"column":149,"nodeType":"328","messageId":"329","endLine":95,"endColumn":151},{"ruleId":"286","severity":1,"message":"310","line":24,"column":8,"nodeType":"288","endLine":24,"endColumn":10,"suggestions":"330"},{"ruleId":"316","severity":1,"message":"317","line":64,"column":29,"nodeType":"318","endLine":64,"endColumn":227},{"ruleId":"286","severity":1,"message":"331","line":22,"column":8,"nodeType":"288","endLine":22,"endColumn":10,"suggestions":"332"},{"ruleId":"286","severity":1,"message":"331","line":29,"column":8,"nodeType":"288","endLine":29,"endColumn":21,"suggestions":"333"},{"ruleId":"326","severity":1,"message":"327","line":63,"column":56,"nodeType":"328","messageId":"329","endLine":63,"endColumn":58},{"ruleId":"286","severity":1,"message":"331","line":24,"column":8,"nodeType":"288","endLine":24,"endColumn":10,"suggestions":"334"},{"ruleId":"286","severity":1,"message":"331","line":32,"column":8,"nodeType":"288","endLine":32,"endColumn":21,"suggestions":"335"},{"ruleId":"326","severity":1,"message":"327","line":65,"column":56,"nodeType":"328","messageId":"329","endLine":65,"endColumn":58},{"ruleId":"286","severity":1,"message":"314","line":23,"column":11,"nodeType":"288","endLine":23,"endColumn":13,"suggestions":"336"},{"ruleId":"326","severity":1,"message":"327","line":45,"column":125,"nodeType":"328","messageId":"329","endLine":45,"endColumn":127},{"ruleId":"286","severity":1,"message":"331","line":31,"column":8,"nodeType":"288","endLine":31,"endColumn":10,"suggestions":"337"},{"ruleId":"286","severity":1,"message":"331","line":40,"column":8,"nodeType":"288","endLine":40,"endColumn":97,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":19,"column":7,"nodeType":"341","messageId":"342","endLine":19,"endColumn":13},{"ruleId":"294","severity":1,"message":"343","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"304","line":15,"column":7,"nodeType":"288","endLine":15,"endColumn":9,"suggestions":"344"},{"ruleId":"286","severity":1,"message":"314","line":18,"column":7,"nodeType":"288","endLine":18,"endColumn":9,"suggestions":"345"},{"ruleId":"286","severity":1,"message":"304","line":20,"column":7,"nodeType":"288","endLine":20,"endColumn":9,"suggestions":"346"},{"ruleId":"294","severity":1,"message":"347","line":49,"column":21,"nodeType":"296","messageId":"297","endLine":49,"endColumn":31},{"ruleId":"294","severity":1,"message":"348","line":1,"column":28,"nodeType":"296","messageId":"297","endLine":1,"endColumn":37},{"ruleId":"294","severity":1,"message":"349","line":6,"column":5,"nodeType":"296","messageId":"297","endLine":6,"endColumn":24},{"ruleId":"294","severity":1,"message":"350","line":9,"column":5,"nodeType":"296","messageId":"297","endLine":9,"endColumn":32},{"ruleId":"286","severity":1,"message":"304","line":20,"column":7,"nodeType":"288","endLine":20,"endColumn":9,"suggestions":"351"},{"ruleId":"294","severity":1,"message":"347","line":45,"column":21,"nodeType":"296","messageId":"297","endLine":45,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["352"],"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"no-unused-vars","'formValid' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'chooseVisible' is assigned a value but never used.","'setChooseVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'appeal'. Either include it or remove the dependency array.",["355"],["353"],["354"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["356"],"React Hook useEffect has a missing dependency: 'user.userId'. Either include it or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'employee'. Either include it or remove the dependency array.",["358"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["359"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["360"],["361"],"'APPEAL_ITEM_ROUTE' is defined but never used.",["362"],["363"],["364"],["365"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["366"],"React Hook useEffect has missing dependencies: 'appeal' and 'user.userId'. Either include them or remove the dependency array.",["367"],["368"],["369"],["370"],["371"],["372"],["373"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useContext' is defined but never used.",["374"],["375"],["376"],"'setPieDate' is assigned a value but never used.","'useEffect' is defined but never used.","'CRUD_EMPLOYEE_ROUTE' is defined but never used.","'REGISTRATION_EMPLOYEE_ROUTE' is defined but never used.",["377"],{"desc":"378","fix":"379"},"no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"380","fix":"390"},{"desc":"391","fix":"392"},{"desc":"380","fix":"393"},{"desc":"391","fix":"394"},{"desc":"380","fix":"395"},{"desc":"391","fix":"396"},{"desc":"384","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"398","fix":"402"},{"desc":"400","fix":"403"},{"desc":"388","fix":"404"},{"desc":"398","fix":"405"},{"desc":"406","fix":"407"},{"desc":"380","fix":"408"},{"desc":"388","fix":"409"},{"desc":"380","fix":"410"},{"desc":"380","fix":"411"},"Update the dependencies array to be: [user]",{"range":"412","text":"413"},"Update the dependencies array to be: [appeal]",{"range":"414","text":"415"},"Update the dependencies array to be: [user.id]",{"range":"416","text":"417"},"Update the dependencies array to be: [user.userId]",{"range":"418","text":"419"},"Update the dependencies array to be: [employee]",{"range":"420","text":"421"},"Update the dependencies array to be: [id]",{"range":"422","text":"423"},{"range":"424","text":"415"},"Update the dependencies array to be: [appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData, appeal]",{"range":"425","text":"426"},{"range":"427","text":"415"},{"range":"428","text":"426"},{"range":"429","text":"415"},{"range":"430","text":"426"},{"range":"431","text":"419"},"Update the dependencies array to be: [appeal, user.userId]",{"range":"432","text":"433"},"Update the dependencies array to be: [appeal, appeal.page, user.userId]",{"range":"434","text":"435"},{"range":"436","text":"433"},{"range":"437","text":"435"},{"range":"438","text":"423"},{"range":"439","text":"433"},"Update the dependencies array to be: [appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData, appeal, user.userId]",{"range":"440","text":"441"},{"range":"442","text":"415"},{"range":"443","text":"423"},{"range":"444","text":"415"},{"range":"445","text":"415"},[716,718],"[user]",[724,726],"[appeal]",[1205,1207],"[user.id]",[1116,1118],"[user.userId]",[492,494],"[employee]",[1077,1079],"[id]",[1392,1394],[1705,1794],"[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData, appeal]",[1416,1418],[1758,1847],[1389,1391],[1733,1822],[961,963],[859,861],"[appeal, user.userId]",[1057,1070],"[appeal, appeal.page, user.userId]",[925,927],[1167,1180],[868,870],[1446,1448],[1750,1839],"[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData, appeal, user.userId]",[631,633],[667,669],[584,586],[590,592]]