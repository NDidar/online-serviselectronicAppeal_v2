{"version":3,"sources":["utils/Consts.js","components/modals/ChoosingEmployeeAction.js","pages/Admin.js","http/index.js","http/UserApi.js","components/SvgSelectors/SvgSelectors.js","pages/Auth.js","Assets/maxresdefault.jpg","pages/MainPage.js","components/DropdownMenus.js","http/AppealApi.js","components/TabNaturalAppeal.js","components/TabLegalEntityAppeal.js","pages/userPages/creatAppeal.js","pages/employeePages/EmployeePage.js","components/CRUD/organizationCRUD/CreatOrganization.js","components/CRUD/organizationCRUD/EditOrganiztion.js","components/CRUD/organizationCRUD/OrganizationList.js","pages/adminPages/CRUDOrganization.js","components/CRUD/departmentCRUD/CreatDepartment.js","components/CRUD/departmentCRUD/EditDepartment.js","components/CRUD/departmentCRUD/DepartmentList.js","pages/adminPages/CRUDDepartment.js","pages/adminPages/RegistrationNewEmployee.js","Assets/avatar.jpg","components/CRUD/employeeCRUD/EmployeeList.js","pages/adminPages/CRUDEmployee.js","components/CRUD/employeeCRUD/EmployeeProfile.js","pages/userPages/Profile.js","components/Pages.js","pages/userPages/viewHistory.js","pages/userPages/viewActApp.js","components/Mailer.js","components/AppealItem.js","pages/userPages/viewNotActApp.js","components/tabs/NaturalEntityAppealTab.js","components/tabs/LegalEntityAppealTab.js","components/tabs/AnonAppealTab.js","components/modals/InformationalWarning.js","components/AnonAppeal.js","pages/userPages/CreateAnonAppeal.js","components/AnonAppealItem.js","pages/employeePages/Chart.js","pages/employeePages/Diagram.js","pages/employeePages/DiagramLegal.js","routes.js","components/AppRouter.js","components/modals/ChooseChart.js","components/NavBar.js","App.js","appeal/userAppeal.js","appeal/Appeal.js","index.js"],"names":["ADMIN_ROUTE","LOGIN_ROUTE","REGISTRATION_ROUTE","ANON_APPEAL_ROUTE","MAIN_ROUTE","CREATE_APPEAL_ROUTE","NOT_ACTIVE_APPEAL_USER_ROUTE","PROFILE_ROUTE","EMPLOYEE_ROUTE","NATURAL_TAB_ROUTE","LEGAL_TAB_ROUTE","ANON_TAB_ROUTE","DIAGRAM_ROUTE","DIAGRAM_SECOND_ROUTE","CRUD_ORGANIZATION_ROUTE","CRUD_DEPARTMENT_ROUTE","REGISTRATION_EMPLOYEE_ROUTE","CRUD_EMPLOYEE_ROUTE","ChoosingEmployeeAction","show","onHide","history","useHistory","Modal","open","onClose","Box","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","Typography","id","variant","component","className","mt","Button","onClick","push","Admin","observer","useState","chooseVisible","setChooseVisible","Container","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","registration","email","password","role","a","post","data","setItem","token","jwtDecode","login","check","get","fetchEmployees","params","fetchUser","updateUser","name","put","deleteUser","delete","SvgSelectors","viewBox","xmlns","d","CloseIcon","props","propTypes","fontSize","PropTypes","Auth","user","useContext","Context","location","useLocation","isLogin","pathname","setEmail","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","setFormValid","errorStatus","setErrorStatus","isHide","setIsHide","useEffect","click","setUser","setIsAuth","setUserId","setRole","response","message","console","log","handleClick","blurHandler","e","target","React","setOpen","handleClose","event","reason","action","Fragment","IconButton","size","color","style","background","height","window","innerHeight","Card","borderRadius","linearGradient","Form","onSubmit","preventDefault","TextField","label","onBlur","value","onChange","test","String","toLowerCase","emailHandler","length","passwordHandler","type","right","cursor","Row","to","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","Alert","severity","MainPage","bgImageMainPage","backgroundSize","Col","marginTop","DropdownMenus","appeal","Dropdown","Toggle","selectedOrganization","organization_name","Menu","organizations","map","organization","Item","setSelectedOrganization","selectedDepartment","department","departments","setSelectedDepartment","createOrganization","fetchOrganizations","updateOrganization","deleteOrganization","creatDepartment","fetchDepartments","updateDepartment","deleteDepartment","creatElectronicAppeal","fetchAppeals","statusLegal","organizationAddressId","departmentAppealId","status","limit","page","userId","fetchOneAppeal","updateStatus","deleteAppeal","creatAnonAppeal","fetchAnonAppeals","fetchOneAnonAppeal","updateAnonStatus","TabNaturalAppeal","setName","surname","setSurname","home_address","setHome_address","phone_number","setPhone_number","essence","setEssence","img","setImg","file","setFile","then","Control","placeholder","as","rows","files","formData","FormData","append","TabLegalEntityAppeal","nameLegalEntity","setNameLegalEntity","content","setContent","username","CreatAppeal","setOrganizations","setDepartment","Tabs","defaultActiveKey","Tab","eventKey","title","EmployeePage","CreatOrganization","EditOrganization","valueT","setValueT","updOrganization","reload","error","OrganizationList","setOrganization","delOrganization","filter","CRUDOrganization","CreatDepartment","EditDepartment","updDepartment","DepartmentList","delDepartment","CrudDepartment","RegistrationNewEmployee","EmployeeList","emp","md","EMPLOYEE_PROFILE_ROUTE","Image","src","avatar","CrudEmployee","employee","setEmployee","EmployeeProfile","useParams","updName","updSurname","updPhone_number","updHome_address","delEmployee","FormControl","Profile","updDelivery_address","Pages","pages","pageCount","Math","ceil","totalCount","i","Pagination","active","setPage","ViewHistory","historyAppeal","setHistoryAppeal","setAppeals","delAppeal","appeals","date","onDoubleClick","APPEAL_ITEM_ROUTE","createdAt","require","format","organization_address","department_appeal","ViewActApp","setTotalCount","count","Mailer","oneAppeal","margin","emailjs","sendForm","res","catch","err","defaultValue","AppealItem","setOneAppeal","updStatus","nameLegal","href","DropdownToggle","DropdownMenu","viewNotActApp","setViewNotActApp","selectedStatus","setSelectedStatus","selectedStatusData","setSelectedStatusData","NaturalEntityAppealTab","Table","LegalEntityAppealTab","AnonAppealTab","ANON_APPEAL_ITEM_ROUTE","InformationalWarning","backdrop","keyboard","Header","Title","Body","Footer","AnonAppeal","setShow","CreateAnonAppeal","AnonAppealItem","Chart","chartDate","options","maintainAspectRatio","Diagram","stringOrder","result","forEach","j","Names","counts","key","labels","datasets","backgroundColor","borderColor","borderWidth","pieDate","DiagramLegal","adminRoutes","path","Component","CRUDDepartment","CRUDEmployee","employeeRoutes","userRoutes","creatAppeal","viewHistory","viewActApp","publicRoutes","AppRouter","isAuth","exact","ChooseChart","handleDiagramFirst","handleDiagramSecond","NavBar","logOut","Navbar","bg","Nav","App","loading","setLoading","finally","Spinner","animation","userAppeal","this","_isAuth","_user","_role","_userId","makeAutoObservable","bool","Appeal","_organizations","_departments","_appeals","_selectedOrganization","_selectedDepartment","_isHide","_page","_total_count","_limit","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b0a6d056.chunk.js","sourcesContent":["//client\r\nexport const ADMIN_ROUTE = '/admin'\r\nexport const LOGIN_ROUTE = '/login'\r\nexport const REGISTRATION_ROUTE = '/registration'\r\nexport const ANON_APPEAL_ROUTE = '/createanonappeal'\r\nexport const MAIN_ROUTE = '/'\r\n\r\n\r\n//user\r\nexport const CREATE_APPEAL_ROUTE = '/createappeal'\r\nexport const HISTORY_APPEAL_USER_ROUTE = '/historyU'\r\nexport const ACTIVE_APPEAL_USER_ROUTE = '/activeU'\r\nexport const NOT_ACTIVE_APPEAL_USER_ROUTE = '/notactivU'\r\nexport const PROFILE_ROUTE = '/profile'\r\nexport const APPEAL_ITEM_ROUTE = '/appealItem'\r\n\r\n//employee\r\nexport const EMPLOYEE_ROUTE = '/employeePage'\r\nexport const NATURAL_TAB_ROUTE = '/naturalTab'\r\nexport const LEGAL_TAB_ROUTE = '/legalTab'\r\nexport const ANON_TAB_ROUTE = '/AnonTab'\r\nexport const SEND_EMAIL_ROUTE = '/sendEmail'\r\nexport const ANON_APPEAL_ITEM_ROUTE = '/anonappealItem'\r\nexport const DIAGRAM_ROUTE = '/diagramFirst'\r\nexport const DIAGRAM_SECOND_ROUTE = '/diagramSecond'\r\n\r\n\r\n//admin\r\nexport const CRUD_ORGANIZATION_ROUTE = '/crudOrganization'\r\nexport const CRUD_DEPARTMENT_ROUTE = '/crudDepartment'\r\nexport const REGISTRATION_EMPLOYEE_ROUTE = '/registrationEmployee'\r\nexport const CRUD_EMPLOYEE_ROUTE = '/crudEmployee'\r\nexport const EMPLOYEE_PROFILE_ROUTE = '/employeeProfile'","import React from 'react';\r\nimport {Box, Modal, Typography} from \"@mui/material\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CRUD_EMPLOYEE_ROUTE, REGISTRATION_EMPLOYEE_ROUTE} from \"../../utils/Consts\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst ChoosingEmployeeAction = ({show, onHide}) => {\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={show}\r\n                onClose={onHide}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Выберите действие\r\n                    </Typography>\r\n                    <Typography className='d-flex flex-column' id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={() => history.push(REGISTRATION_EMPLOYEE_ROUTE)}>Добавить сотрудника</Button>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={() => history.push(CRUD_EMPLOYEE_ROUTE)}>Редактирование сотрудников</Button>\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChoosingEmployeeAction;","import React, {useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CRUD_DEPARTMENT_ROUTE, CRUD_ORGANIZATION_ROUTE} from \"../utils/Consts\";\r\nimport ChoosingEmployeeAction from \"../components/modals/ChoosingEmployeeAction\";\r\n\r\nconst Admin = observer(() => {\r\n    const history = useHistory()\r\n    const [chooseVisible, setChooseVisible] = useState(false)\r\n    return (\r\n        <Container className='d-flex flex-column'>\r\n            <Button variant={\"outline-dark\"} className='mt-3 p-2' onClick={() => setChooseVisible(true)}>Настройки учета сотрудников</Button>\r\n            <Button variant={\"outline-dark\"} className='mt-3 p-2' onClick={() => history.push(CRUD_ORGANIZATION_ROUTE)}>Работа с данными организации</Button>\r\n            <Button variant={\"outline-dark\"} className='mt-3 p-2' onClick={() => history.push(CRUD_DEPARTMENT_ROUTE)}>Работа с данными деятельности</Button>\r\n            <ChoosingEmployeeAction show={chooseVisible} onHide={() => setChooseVisible(false)}/>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Admin;","import axios from \"axios\";\r\n\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/'\r\n})\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/'\r\n})\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\nexport {\r\n    $authHost,\r\n    $host\r\n}\r\n","import {$authHost, $host} from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const registration = async (email, password, role) => {\r\n    if(role === 'EMPLOYEE'){\r\n        const {data} = await $host.post('api/user/registration', {email, password, role})\r\n        return data\r\n    } else{\r\n        const {data} = await $host.post('api/user/registration', {email, password, role})\r\n        localStorage.setItem('token', data.token)\r\n        return jwtDecode(data.token)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('api/user/login', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const {data} = await $authHost.get('api/user/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const fetchEmployees = async () => {\r\n    const {data} = await $host.get('api/user/employees', {params:{\r\n            role: 'EMPLOYEE'\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchUser = async (id) => {\r\n    const {data} = await $host.get('api/user/profile',{params:{\r\n            id\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const updateUser = async (name) => {\r\n    const {data} = await $authHost.put('api/user/profile', name)\r\n    return data\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n    const {data} = await $authHost.delete('api/user/' + id)\r\n    return data\r\n}","import React from \"react\";\r\n\r\n\r\nconst SvgSelectors = ({ id }) => {\r\n  switch (id) {\r\n\r\n    case \"show\":\r\n      return (\r\n        <svg  viewBox=\"0 -16 544 544\" xmlns=\"http://www.w3.org/2000/svg\" ><title>Показать пароль</title><path d=\"M272 400Q205 400 151 361 96 322 64 256 96 190 151 151 205 112 272 112 336 112 392 153 448 193 480 256 448 319 392 360 336 400 272 400ZM272 352Q312 352 340 324 368 296 368 256 368 216 340 188 312 160 272 160 232 160 204 188 176 216 176 256 176 296 204 324 232 352 272 352ZM272 312Q249 312 233 296 216 279 216 256 216 233 233 217 249 200 272 200 295 200 312 217 328 233 328 256 328 279 312 296 295 312 272 312Z\" /></svg>\r\n\r\n      );\r\n    case \"hide\":\r\n        return (\r\n          <svg  viewBox=\"0 -16 544 544\" xmlns=\"http://www.w3.org/2000/svg\" ><title>Скрыть пароль</title><path d=\"M108 60L468 420 436 452 362 378Q321 400 272 400 208 400 154 361 99 322 64 256 79 229 102 202 124 174 144 160L76 92 108 60ZM368 256Q368 216 340 188 312 160 272 160L229 117Q254 112 272 112 337 112 392 152 446 192 480 256 474 269 461 288 448 307 434 322L368 256ZM272 352Q299 352 322 338L293 309Q283 312 272 312 249 312 233 296 216 279 216 256 216 247 220 236L190 206Q176 229 176 256 176 296 204 324 232 352 272 352Z\" /></svg>\r\n      );\r\n\r\n    default:\r\n      return <svg></svg>;\r\n      break;\r\n  }\r\n};\r\n\r\nexport default SvgSelectors;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Card, Container, Form, Row} from \"react-bootstrap\";\r\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE} from \"../utils/Consts\";\r\nimport {login, registration} from \"../http/UserApi\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Alert, IconButton, Snackbar, TextField} from \"@mui/material\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport SvgSelectors from \"../components/SvgSelectors/SvgSelectors\";\r\n\r\nfunction CloseIcon(props) {\r\n    return null;\r\n}\r\n\r\nCloseIcon.propTypes = {fontSize: PropTypes.string};\r\n\r\n\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Email не может быть пустым')\r\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n    const [errorStatus, setErrorStatus] = useState('')\r\n    const [isHide, setIsHide] = useState(false);\r\n\r\n    const handleIsHide = () => {\r\n        setIsHide(isHide ? false : true)\r\n    }\r\n    const handleForm = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    },[emailError, passwordError])\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data\r\n            if(isLogin){\r\n                data = await login(email, password)\r\n            } else {\r\n                data = await registration(email, password)\r\n            }\r\n            user.setUser(user);\r\n            user.setIsAuth(true);\r\n            user.setUserId(data.id)\r\n            user.setRole(data.role)\r\n            history.push(MAIN_ROUTE)\r\n        } catch (e) {\r\n            setErrorStatus(e.response.data.message)\r\n            console.log(e.response.data.message)\r\n            handleClick()\r\n        }\r\n    }\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный mail')\r\n            if(!e.target.value){\r\n                setEmailError('mail не может быть пустым')\r\n            }\r\n        } else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 8){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 8')\r\n            if(!e.target.value){\r\n                setPasswordError('Пароль не может быть пустым')\r\n            }\r\n        } else {\r\n            setPasswordError(\"\")\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div style={{background: \"gray\"}}>\r\n            <Container\r\n                className='d-flex justify-content-center align-items-center'\r\n                style={{height: window.innerHeight - 54}}\r\n            >\r\n                <Card className='p-5' style={{width: 600, borderRadius: 20, linearGradient: 'red'}}>\r\n                    <h2 className='m-auto'>{isLogin? 'Авторизация' : 'Регистрация'}</h2>\r\n                    <Form className='d-flex flex-column' onSubmit={handleForm}>\r\n                        {(emailDirty && emailError) && <div style={{color: 'red'}}>{emailError}</div>}\r\n                        <TextField\r\n                            size='small'\r\n                            label='Введите ваш email...'\r\n                            variant=\"outlined\"\r\n                            id=\"outlined-basic\"\r\n                            onBlur={e => blurHandler(e)}\r\n                            name='email'\r\n                            className=\"mt-3\"\r\n                            value={email}\r\n                            onChange={e => emailHandler(e)}\r\n                        />\r\n                        {(passwordDirty && passwordError) && <div style={{color: 'red'}}>{[passwordError]}</div>}\r\n                        <div className='d-flex align-items-center justify-content-center position-relative'>\r\n                            <TextField\r\n                            size='small'\r\n                            label='Введите ваш пароль...'\r\n                            id=\"outlined-basic\"\r\n                            variant=\"outlined\"\r\n                            onBlur={e => blurHandler(e)}\r\n                            name='password'\r\n                            className=\"mt-3\"\r\n                            value={password}\r\n                            onChange={e => passwordHandler(e)}\r\n                            type={isHide ? \"text\": \"password\"}\r\n                            style={{width: '100%'}}\r\n                        />\r\n                            <div onClick={handleIsHide} className='isHide mt-3 position-absolute' style={{width: 30, right: 5, cursor: \"pointer\"}}><SvgSelectors id={isHide ? \"show\" : \"hide\"}/></div></div>\r\n                        <Row className='d-flex justify-content-between mt-3 pl-3 pr-3'>\r\n                            {isLogin?\r\n                                <div>\r\n                                    Нет аккаунта?\r\n                                    <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся</NavLink>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    Есть аккаунта?\r\n                                    <NavLink to={LOGIN_ROUTE}>Войдите</NavLink>\r\n                                </div>\r\n                            }\r\n\r\n                            <Button\r\n                                className='align-self-end'\r\n                                variant={\"outline-success\"}\r\n                                onClick={click}\r\n                            >\r\n                                {isLogin ?\r\n                                    'Войти'\r\n                                    :\r\n                                    'Регистрация'\r\n                                }\r\n                            < /Button>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <Snackbar\r\n                    anchorOrigin={{horizontal: 'center', vertical: 'top'}}\r\n                    open={open}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleClose}\r\n                    action={action}\r\n                >\r\n                    <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                        {errorStatus}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Auth;","export default __webpack_public_path__ + \"static/media/maxresdefault.ab4e5173.jpg\";","import React, {useContext} from 'react';\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport bgImageMainPage from '../../../../online-service-for-electronic-appeal_v2/client/src/Assets/maxresdefault.jpg'\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n    ANON_APPEAL_ROUTE,\r\n    CREATE_APPEAL_ROUTE,\r\n    NOT_ACTIVE_APPEAL_USER_ROUTE\r\n} from \"../utils/Consts\";\r\n\r\nconst MainPage = observer( () => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container>\r\n            <Row style={{background: `url(${bgImageMainPage}) no-repeat center center`, width:1142, height: 640, backgroundSize: 'cover'}}>\r\n                <Col className='d-flex flex-column justify-content-center align-items-end'>\r\n                    {user.role === 'USER'?\r\n                        <Row className='d-flex flex-column '>\r\n                            <Button\r\n                                style={{fontSize: 20}}\r\n                                variant={\"outline-danger\"}\r\n                                onClick={() => history.push(CREATE_APPEAL_ROUTE)}\r\n                            >\r\n                                Создать электронное обращение\r\n                            </Button>\r\n                            <Button\r\n                                style={{fontSize: 20, marginTop: 20}}\r\n                                variant={\"outline-danger\"}\r\n                                onClick={() => history.push(NOT_ACTIVE_APPEAL_USER_ROUTE)}\r\n                            >\r\n                                Просмотр обращений\r\n                            </Button>\r\n                        </Row>\r\n                        :\r\n                        user.role === ''?\r\n                            <Row className='d-flex flex-column '>\r\n                                <Button\r\n\r\n                                    style={{fontSize: 20, marginTop: 20}}\r\n                                    variant={\"outline-danger\"}\r\n                                    onClick={() => history.push(ANON_APPEAL_ROUTE)}\r\n                                >\r\n                                    Оставить анонимное обращения\r\n                                </Button>\r\n                            </Row>\r\n                            :\r\n                            null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default MainPage;","import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Dropdown, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\n\r\nconst DropdownMenus = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex'>\r\n                <Dropdown className=\"mt-2 mb-2\">\r\n                    <Dropdown.Toggle variant={\"outline-dark\"}>{appeal.selectedOrganization.organization_name || \"Выберите адрес организации\"}</Dropdown.Toggle>\r\n                    <Dropdown.Menu variant={'outline-dark'}>\r\n                        {appeal.organizations.map(organization =>\r\n                            <Dropdown.Item\r\n                                onClick={() => appeal.setSelectedOrganization(organization)}\r\n                                key={organization.id}\r\n                            >\r\n                                {organization.organization_name}\r\n                            </Dropdown.Item>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown className=\"mt-2 mb-2 ml-4\">\r\n                    <Dropdown.Toggle variant={\"outline-dark\"}>{appeal.selectedDepartment.department || \"Выберите вид деятельности\"}</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {appeal.departments.map(department =>\r\n                            <Dropdown.Item\r\n                                onClick={() => appeal.setSelectedDepartment(department)}\r\n                                key={department.id}\r\n                            >\r\n                                {department.department}\r\n                            </Dropdown.Item>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DropdownMenus;","import {$authHost, $host} from \"./index\";\r\n\r\n//Organizations\r\nexport const createOrganization = async (organization_name) => {\r\n    const {data} = await $authHost.post('api/organization', organization_name)\r\n    return data\r\n}\r\n\r\nexport const fetchOrganizations = async () => {\r\n    const {data} = await $host.get('api/organization', )\r\n    return data\r\n}\r\n\r\nexport const updateOrganization = async (organization_name, id) => {\r\n    const {data} = await $authHost.put('api/organization/' + id, organization_name)\r\n    return data\r\n}\r\n\r\nexport const deleteOrganization = async (id) => {\r\n    const {data} = await $authHost.delete('api/organization/' + id)\r\n    console.log(id)\r\n    return data\r\n}\r\n\r\n//departments\r\nexport const creatDepartment = async (department) => {\r\n    const {data} = await $authHost.post('api/department', department)\r\n    return data\r\n}\r\n\r\nexport const fetchDepartments = async () => {\r\n    const {data} = await $host.get('api/department')\r\n    return data\r\n}\r\n\r\nexport const updateDepartment = async (department, id) => {\r\n    const {data} = await $authHost.put('api/department/' + id, department)\r\n    return data\r\n}\r\n\r\nexport const deleteDepartment = async (id) => {\r\n    const {data} = await $authHost.delete('api/department/' + id)\r\n    console.log(id)\r\n    return data\r\n}\r\n\r\n//appeal\r\nexport const creatElectronicAppeal = async (appeal) => {\r\n    const {data} = await $host.post('api/appeal', appeal)\r\n    return data\r\n}\r\n\r\nexport const fetchAppeals = async (statusLegal, organizationAddressId,departmentAppealId, status,limit, page, userId) => {\r\n    const {data} = await $host.get('api/appeal', {params: {\r\n            statusLegal, organizationAddressId, departmentAppealId,\r\n            status, limit, page, userId\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneAppeal = async (id) => {\r\n    const {data} = await $host.get('api/appeal/' + id)\r\n    return data\r\n}\r\n\r\nexport const updateStatus = async (status, id) => {\r\n    const {data} = await $host.put('api/appeal/' + id, status)\r\n    return data\r\n}\r\n\r\nexport const deleteAppeal = async (id) => {\r\n    const {data} = await $host.delete('api/appeal/' + id)\r\n    console.log(id)\r\n    return data\r\n}\r\n\r\n//Anon appeal\r\n\r\nexport const creatAnonAppeal = async (appeal) => {\r\n    const {data} = await $host.post('api/anonymousAppeal', appeal)\r\n    return data\r\n}\r\n\r\nexport const fetchAnonAppeals = async (organizationAddressId,departmentAppealId, status,limit, page) => {\r\n    const {data} = await $host.get('api/anonymousAppeal', {params: {\r\n            organizationAddressId, departmentAppealId,\r\n            status, limit, page\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneAnonAppeal = async (id) => {\r\n    const {data} = await $host.get('api/anonymousAppeal/' + id)\r\n    return data\r\n}\r\n\r\nexport const updateAnonStatus = async (status, id) => {\r\n    const {data} = await $host.put('api/anonymousAppeal/' + id, status)\r\n    return data\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Form, Row} from \"react-bootstrap\";\r\nimport {creatElectronicAppeal} from \"../http/AppealApi\";\r\nimport {Context} from \"../index\";\r\nimport {fetchUser} from \"../http/UserApi\";\r\n\r\nconst TabNaturalAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n    const {user} = useContext(Context)\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n    const [essence, setEssence] = useState('')\r\n    const [img, setImg] = useState(null)\r\n    const [file, setFile] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchUser(user.userId).then(data =>{\r\n\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n            setEmail(data[0].email)\r\n        })\r\n    },[])\r\n\r\n    const selectImg = e =>{\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const selectFile = e =>{\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    const addAppeal = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('surname', surname)\r\n        formData.append('home_address', home_address)\r\n        formData.append('phone_number', phone_number)\r\n        formData.append('content', essence)\r\n        formData.append('img', img)\r\n        formData.append('file', file)\r\n        formData.append('userId', user.userId)\r\n        formData.append('organizationAddressId', appeal.selectedOrganization.id)\r\n        formData.append('departmentAppealId', appeal.selectedDepartment.id)\r\n        creatElectronicAppeal(formData).then()\r\n    }\r\n\r\n    return (\r\n        <Form className='d-flex flex-column'>\r\n            <Row className='d-flex mt-3 pl-3 pr-3'>\r\n                <Form.Control\r\n                    placeholder='Введите ваше имя'\r\n                    className='mt-3'\r\n                    style={{width: 300}}\r\n                    value={name? name : ''}\r\n                    onChange={e => setName(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='Введите вашу фамилию'\r\n                    className='mt-3 ml-2'\r\n                    style={{width: 300}}\r\n                    value={surname? surname:''}\r\n                    onChange={e => setSurname(e.target.value)}\r\n                />\r\n            </Row>\r\n            <Form.Control\r\n                placeholder='Адрес (адрес места жительства (места пребывания))'\r\n                className='mt-3'\r\n                value={home_address? home_address : ''}\r\n                onChange={e => setHome_address(e.target.value)}\r\n            />\r\n            <Form.Control\r\n                placeholder='E-mail (адрес электронной почты заявителя)'\r\n                className='mt-3'\r\n                value={email? email : ''}\r\n                onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <Form.Control\r\n                placeholder='Суть обращения'\r\n                className='mt-3'\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={essence? essence : ''}\r\n                onChange={e => setEssence(e.target.value)}\r\n            />\r\n            <br/>\r\n            <h4>Прикрепите фото</h4>\r\n            <Form.Control\r\n                className='mt-3'\r\n                type = 'file'\r\n                onChange={selectImg}\r\n            />\r\n            <br/>\r\n            <h4>Прикрепите файл</h4>\r\n            <Form.Control\r\n                className='mt-3'\r\n                type = 'file'\r\n                onChange={selectFile}\r\n            />\r\n            <Button onClick={addAppeal} className='mt-2 mb-3' variant={\"outline-success\"}>Отправить</Button>\r\n        </Form>\r\n\r\n    );\r\n});\r\n\r\nexport default TabNaturalAppeal;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Container, Form, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {fetchUser} from \"../http/UserApi\";\r\nimport {creatElectronicAppeal} from \"../http/AppealApi\";\r\n\r\nconst TabLegalEntityAppeal = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n\r\n    const [nameLegalEntity, setNameLegalEntity] = useState('')\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [home_address, setHome_address] = useState('');\r\n    const [phone_number, setPhone_number] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [img, setImg] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUser(user.id).then(data => {\r\n            setName(data[0].username)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n            setEmail(data[0].email)\r\n        })\r\n    }, [])\r\n\r\n    const selectImg = e =>{\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const selectFile = e =>{\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addLegalEntityAppeal = () => {\r\n        const formData = new FormData()\r\n        formData.append('nameLegal', nameLegalEntity)\r\n        formData.append('statusLegal', 'true')\r\n        formData.append('name', name)\r\n        formData.append('surname', surname)\r\n        formData.append('home_address', home_address)\r\n        formData.append('phone_number', phone_number)\r\n        formData.append('content', content)\r\n        formData.append('img', img)\r\n        formData.append('file', file)\r\n        formData.append('userId', user.userId)\r\n        formData.append('organizationAddressId', appeal.selectedOrganization.id)\r\n        formData.append('departmentAppealId', appeal.selectedDepartment.id)\r\n        creatElectronicAppeal(formData).then(data => console.log('all right'))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form className='d-flex flex-column'>\r\n                <Form.Control\r\n                    className='mt-3'\r\n                    placeholder='Полное наименование юридического лица'\r\n                    value={nameLegalEntity? nameLegalEntity : ''}\r\n                    onChange={e => setNameLegalEntity(e.target.value)}\r\n                />\r\n                <Row className='d-flex mt-3 pl-3 pr-3'>\r\n                    <Form.Control\r\n                        placeholder='Введите ваше имя'\r\n                        className='mt-3'\r\n                        style={{width: 300}}\r\n                        value={name? name : ''}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        placeholder='Введите вашу фамилию'\r\n                        className='mt-3 ml-2'\r\n                        style={{width: 300}}\r\n                        value={surname? surname : ''}\r\n                        onChange={e => setSurname(e.target.value)}\r\n                    />\r\n                </Row>\r\n                <Form.Control\r\n                    placeholder='Адрес (адрес организации (места регистрации))'\r\n                    className='mt-3'\r\n                    value={home_address? home_address : ''}\r\n                    onChange={e => setHome_address(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='E-mail (адрес электронной почты заявителя)'\r\n                    className='mt-3'\r\n                    value={email? email : ''}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <Form.Control\r\n                    placeholder='Суть обращения'\r\n                    className='mt-3'\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    onChange={e => setContent(e.target.value)}\r\n                />\r\n                <br/>\r\n                <h4>Прикрепите фото</h4>\r\n                <Form.Control\r\n                    placeholder=''\r\n                    className='mt-3'\r\n                    type = 'file'\r\n                    onChange={selectImg}\r\n                />\r\n                <br/>\r\n                <h4>Прикрепите файл</h4>\r\n                <Form.Control\r\n                    placeholder='Прикрепите файл'\r\n                    className='mt-3'\r\n                    type = 'file'\r\n                    onChange={selectFile}\r\n                />\r\n                <Button onClick={addLegalEntityAppeal} className='mt-2 mb-3' variant={\"outline-success\"}>Отправить</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default TabLegalEntityAppeal;","import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Tab, Tabs} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\nimport TabNaturalAppeal from \"../../components/TabNaturalAppeal\";\r\nimport TabLegalEntityAppeal from \"../../components/TabLegalEntityAppeal\";\r\nimport {Context} from \"../../index\";\r\nimport {fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\n\r\nconst CreatAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchOrganizations().then(data => appeal.setOrganizations(data))\r\n        fetchDepartments().then(data => appeal.setDepartment(data))\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <Tabs className='mt-2' defaultActiveKey='home' variant={'pills'} id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"home\" title=\"Электронные обращения для граждан, в том числе индивидуальных предпринимателей\">\r\n                    <DropdownMenus />\r\n                    <TabNaturalAppeal />\r\n                </Tab>\r\n                <Tab eventKey=\"profile\"  title=\"Электронные обращения для юридических лиц\">\r\n                    <DropdownMenus />\r\n                    <TabLegalEntityAppeal />\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CreatAppeal;","import React from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ANON_TAB_ROUTE, LEGAL_TAB_ROUTE, NATURAL_TAB_ROUTE} from \"../../utils/Consts\";\r\n\r\nconst EmployeePage = observer(() => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Container className='d-flex flex-column justify-content-around'>\r\n            <Button variant={\"outline-dark\"} className='mt-3' onClick={() => history.push(NATURAL_TAB_ROUTE)}>Обращения физических лиц</Button>\r\n            <Button variant={\"outline-dark\"} className='mt-3' onClick={() => history.push(LEGAL_TAB_ROUTE)}>Обращения юридических лиц</Button>\r\n            <Button variant={\"outline-dark\"} className='mt-3' onClick={() => history.push(ANON_TAB_ROUTE)}>Анонимные обращении</Button>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EmployeePage;","import React, {Fragment, useState} from 'react';\r\nimport {TextField} from \"@mui/material\";\r\nimport {createOrganization} from \"../../../http/AppealApi\";\r\n\r\nconst CreatOrganization = () => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const addOrganization = () => {\r\n        createOrganization({organization_name:name}).then()\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5\">Настройки организации</h1>\r\n            <form className=\"d-flex mt-5\">\r\n                <TextField size=\"small\" label='Введите название' type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)}/>\r\n                <button className=\"btn btn-success\" onClick={addOrganization}>Добавить</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CreatOrganization;","import React, {Fragment, useState} from 'react';\r\nimport {AiTwotoneEdit} from \"react-icons/ai\";\r\nimport {updateOrganization} from \"../../../http/AppealApi\";\r\n\r\nconst EditOrganization = ({organization}) => {\r\n\r\n    const [valueT, setValueT] =useState(organization.organization_name)\r\n\r\n    const updOrganization = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            updateOrganization({organization_name: valueT},organization.id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-toggle=\"modal\"\r\n                data-target={`#id${organization.id}`}\r\n            >\r\n                <AiTwotoneEdit/>\r\n            </button>\r\n\r\n            <div\r\n                className=\"modal\"\r\n                id={`id${organization.id}`}\r\n                onClick={() => setValueT(organization.organization_name)}\r\n            >\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Редактирование организации</h4>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setValueT(organization.organization_name)}\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={valueT}\r\n                                onChange={e=> setValueT(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={e => updOrganization(e)}\r\n                            >\r\n                                Сохранить изменение\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setValueT(organization.organization_name)}\r\n                            >\r\n                                Выйти\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditOrganization;","import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport {deleteOrganization, fetchOrganizations} from \"../../../http/AppealApi\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport EditOrganization from \"./EditOrganiztion\";\r\n\r\nconst OrganizationList = observer(() => {\r\n    const [organization, setOrganization] = useState([])\r\n\r\n    const delOrganization = async (id) => {\r\n        try{\r\n            deleteOrganization(id).then()\r\n            setOrganization(organization.filter(organizations => organizations.id !== id))\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchOrganizations().then(data => setOrganization(data))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className=\"table mt-5 text-center\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Название организации</th>\r\n                    <th>Редактировать</th>\r\n                    <th>Удалить</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {organization.map(organizations => (\r\n                    <tr key={organizations.id}>\r\n                        <td>{organizations.organization_name}</td>\r\n                        <td><EditOrganization organization={organizations}/></td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delOrganization(organizations.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n});\r\n\r\nexport default OrganizationList;","import React from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport CreatOrganization from \"../../components/CRUD/organizationCRUD/CreatOrganization\";\r\nimport OrganizationList from \"../../components/CRUD/organizationCRUD/OrganizationList\";\r\n\r\nconst CRUDOrganization = observer(() => {\r\n    return (\r\n        <Container>\r\n            <CreatOrganization />\r\n            <OrganizationList />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CRUDOrganization;","import React, {Fragment, useState} from 'react';\r\nimport {TextField} from \"@mui/material\";\r\nimport {creatDepartment} from \"../../../http/AppealApi\";\r\n\r\nconst CreatDepartment = () => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const addDepartment = () => {\r\n        creatDepartment({department:name}).then()\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5\">Настройки деятельности</h1>\r\n            <form className=\"d-flex mt-5\">\r\n                <TextField size=\"small\" label='Введите название' type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)}/>\r\n                <button className=\"btn btn-success\" onClick={addDepartment}>Добавить</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CreatDepartment;","import React, {Fragment, useState} from 'react';\r\nimport {AiTwotoneEdit} from \"react-icons/ai\";\r\nimport {updateDepartment} from \"../../../http/AppealApi\";\r\n\r\nconst EditDepartment = ({department}) => {\r\n\r\n    const [valueT, setValueT] =useState(department.department)\r\n\r\n    const updDepartment = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            updateDepartment({department: valueT},department.id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-toggle=\"modal\"\r\n                data-target={`#id${department.id}`}\r\n            >\r\n                <AiTwotoneEdit/>\r\n            </button>\r\n\r\n            <div\r\n                className=\"modal\"\r\n                id={`id${department.id}`}\r\n                onClick={() => setValueT(department.department)}\r\n            >\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Редактирование деятельности</h4>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setValueT(department.department)}\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={valueT}\r\n                                onChange={e=> setValueT(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={e => updDepartment(e)}\r\n                            >\r\n                                Сохранить изменение\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setValueT(department.department)}\r\n                            >\r\n                                Выйти\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditDepartment;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport {deleteDepartment, fetchDepartments} from \"../../../http/AppealApi\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport EditDepartment from \"./EditDepartment\";\r\n\r\nconst DepartmentList = observer(() => {\r\n    const [department, setDepartment] = useState([])\r\n\r\n    const delDepartment = async (id) => {\r\n        try{\r\n            deleteDepartment(id).then()\r\n            setDepartment(department.filter(departments => departments.id !== id))\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(data => setDepartment(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className=\"table mt-5 text-center\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Название деятельности</th>\r\n                    <th>Редактировать</th>\r\n                    <th>Удалить</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {department.map(departments => (\r\n                    <tr key={departments.id}>\r\n                        <td>{departments.department}</td>\r\n                        <td><EditDepartment department={departments}/></td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delDepartment(departments.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n});\r\n\r\nexport default DepartmentList;","import React from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport CreatDepartment from \"../../components/CRUD/departmentCRUD/CreatDepartment\";\r\nimport DepartmentList from \"../../components/CRUD/departmentCRUD/DepartmentList\";\r\n\r\nconst CrudDepartment = observer(() => {\r\n    return (\r\n        <Container>\r\n            <CreatDepartment />\r\n            <DepartmentList />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CrudDepartment;","import React, {useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Container, Form} from \"react-bootstrap\";\r\nimport {Alert, IconButton, Snackbar, TextField} from \"@mui/material\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {CRUD_EMPLOYEE_ROUTE} from \"../../utils/Consts\";\r\nimport {registration} from \"../../http/UserApi\";\r\n\r\nfunction CloseIcon(props) {\r\n    return null;\r\n}\r\n\r\nCloseIcon.propTypes = {fontSize: PropTypes.string};\r\nconst RegistrationNewEmployee = observer(() => {\r\n\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailDirty, setEmailDirty] = useState(false)\r\n    const [passwordDirty, setPasswordDirty] = useState(false)\r\n    const [emailError, setEmailError] = useState('Email не может быть пустым')\r\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n    const [errorStatus, setErrorStatus] = useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    },[emailError, passwordError])\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                setEmailDirty(true)\r\n                break\r\n            case 'password':\r\n                setPasswordDirty(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('Некорректный mail')\r\n            if(!e.target.value){\r\n                setEmailError('mail не может быть пустым')\r\n            }\r\n        } else{\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length < 3 || e.target.value.length > 8){\r\n            setPasswordError('Пароль должен быть длинее 3 и меньше 8')\r\n            if(!e.target.value){\r\n                setPasswordError('Пароль не может быть пустым')\r\n            }\r\n        } else {\r\n            setPasswordError(\"\")\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data = await registration(email, password, 'EMPLOYEE')\r\n            if(data){\r\n                history.push(CRUD_EMPLOYEE_ROUTE)\r\n            }\r\n        } catch (e) {\r\n            setErrorStatus(e.response.data.message)\r\n            console.log(e.response.data.message)\r\n            handleClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className='d-flex justify-content-center align-items-center'\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card className='p-5' style={{width: 600}}>\r\n                <h2 className='m-auto'>Регистрация оператора</h2>\r\n                {(emailDirty && emailError) && <div style={{color: 'red'}}>{emailError}</div>}\r\n                <Form className='d-flex flex-column'>\r\n                    <TextField\r\n                        size='small'\r\n                        label='Введите email оператора...'\r\n                        variant=\"outlined\"\r\n                        id=\"outlined-basic\"\r\n                        onBlur={e => blurHandler(e)}\r\n                        name='email'\r\n                        className=\"mt-3\"\r\n                        value={email}\r\n                        onChange={e => emailHandler(e)}\r\n                    />\r\n                    {(passwordDirty && passwordError) && <div style={{color: 'red'}}>{[passwordError]}</div>}\r\n                    <TextField\r\n                        size='small'\r\n                        label='Введите пароль для оператора...'\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        onBlur={e => blurHandler(e)}\r\n                        name='password'\r\n                        className=\"mt-3\"\r\n                        value={password}\r\n                        onChange={e => passwordHandler(e)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Button\r\n                        className='mt-3'\r\n                        variant={\"outline-success\"}\r\n                        onClick={click}\r\n                    >\r\n                        Регистрация сотрудника\r\n                    </Button>\r\n                </Form>\r\n            </Card>\r\n            <Snackbar\r\n                anchorOrigin={{horizontal: 'center', vertical: 'top'}}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n                action={action}\r\n            >\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {errorStatus}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default RegistrationNewEmployee;","export default __webpack_public_path__ + \"static/media/avatar.565306ac.jpg\";","import React from 'react';\r\nimport avatar from '../../../Assets/avatar.jpg'\r\nimport {Card, Col, Image, Row} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { EMPLOYEE_PROFILE_ROUTE} from \"../../../utils/Consts\";\r\n\r\nconst EmployeeList = ({emp}) => {\r\n    const history = useHistory()\r\n    console.log(emp)\r\n    return (\r\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(EMPLOYEE_PROFILE_ROUTE + '/' + emp.id)}>\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n                <Image width={150} height={150} src={avatar}/>\r\n                {emp.name || emp.surname ?\r\n                    <Row className='mr-2'>\r\n                        Оператор: {emp.name} {emp.surname}\r\n                    </Row>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;","import React, { useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport EmployeeList from \"../../components/CRUD/employeeCRUD/EmployeeList\";\r\nimport {fetchEmployees} from \"../../http/UserApi\";\r\n\r\nconst CrudEmployee = observer(() => {\r\n\r\n    const [employee, setEmployee] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchEmployees().then(data => setEmployee(data))\r\n        console.log(employee)\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='mt-2'>\r\n                <Col md={9}>\r\n                    <Row className='d-flex'>\r\n                        {employee.map(emp =>\r\n                            <EmployeeList key={emp.id} emp={emp}/>\r\n                        )}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CrudEmployee;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Form, FormControl, Row} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {deleteUser, fetchUser, updateUser} from \"../../../http/UserApi\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {CRUD_EMPLOYEE_ROUTE} from \"../../../utils/Consts\";\r\nimport {FaSave} from \"react-icons/fa\";\r\n\r\n\r\n\r\nconst EmployeeProfile = observer( () => {\r\n    const [email, setEmail] = useState( '')\r\n    const [name, setName] = useState( '')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n    const {id} = useParams()\r\n    const history= useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchUser(id).then(data => {\r\n            setEmail(data[0].email)\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const updName = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('name', name)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updSurname = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('surname', surname)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updPhone_number = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('phone_number', phone_number)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updHome_address = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('delivery_address', home_address)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const delEmployee = async () => {\r\n        try{\r\n            deleteUser(id).then()\r\n            history.push(CRUD_EMPLOYEE_ROUTE)\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"rounded bg-white mt-5 mb-5\">\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md={4} className=\"border-right\">\r\n                        <Col className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                            <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\r\n                            <span className=\"font-weight-bold\">{name? name : null}</span>\r\n                            <span className=\"text-black-50\"></span>{email}<span> </span>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col md={8} className=\"border-right\">\r\n                        <Col className=\"p-3 py-5\">\r\n                            <Col className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <h4 className=\"text-right\">Настройка профиля оператора</h4>\r\n                            </Col>\r\n                            <Row className=\"mt-2\">\r\n                                <Col md={4}>\r\n                                    <label className=\"labels\">Имя</label>\r\n                                    <Form>\r\n                                        <FormControl\r\n                                            type=\"text\"\r\n                                            value={name? name : ''}\r\n                                            placeholder=\"Введите имя\"\r\n                                            onChange={e=> setName(e.target.value)}\r\n                                        />\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updName}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={4}><label className=\"labels\">Фамилия</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={surname? surname : ''}\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        onChange={e=> setSurname(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updSurname}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                                <Col md={10}><label className=\"labels\">Мобильный номер</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите мобильный номер\"\r\n                                        value={phone_number? phone_number : ''}\r\n                                        onChange={e=> setPhone_number(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updPhone_number}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={10}><label className=\"labels\">Адрес проживание</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите место проживание\"\r\n                                        value={home_address? home_address : ''}\r\n                                        onChange={e=> setHome_address(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updHome_address}><FaSave /></button>\r\n                                </Col>\r\n                                <Col  className='d-flex align-items-end'>\r\n                                    <Button className='d-flex mt-3' variant={\"outline-danger\"} onClick={delEmployee}>Удалить оператора из базы данных</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default EmployeeProfile;","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {Col, Container, Form, FormControl, Row} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {fetchUser, updateUser} from \"../../http/UserApi\";\r\nimport {Context} from \"../../index\";\r\nimport {FaSave} from \"react-icons/fa\";\r\n\r\nconst Profile = observer( () => {\r\n    const {user} = useContext(Context)\r\n    const [name, setName] = useState( '')\r\n    const [email, setEmail] = useState( '')\r\n    const [surname, setSurname] = useState('')\r\n    const [home_address, setHome_address] = useState('')\r\n    const [phone_number, setPhone_number] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchUser(user.userId).then(data => {\r\n            setEmail(data[0].email)\r\n            setName(data[0].name)\r\n            setSurname(data[0].surname)\r\n            setHome_address(data[0].home_address)\r\n            setPhone_number(data[0].phone_number)\r\n        })\r\n    }, [])\r\n\r\n    const updName = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('name', name)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updSurname = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('surname', surname)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updPhone_number = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('phone_number', phone_number)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    const updDelivery_address = async () => {\r\n        const formData = new FormData()\r\n        formData.append('id', user.userId)\r\n        formData.append('home_address', home_address)\r\n        updateUser(formData).then()\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"rounded bg-white mt-5 mb-5\">\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md={4} className=\"border-right\">\r\n                        <Col className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                            <img className=\"rounded-circle mt-5\" width=\"150px\" src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"/>\r\n                            <span className=\"font-weight-bold\">{name? name : null}</span>\r\n                            <span className=\"text-black-50\"></span>{email? email : null}<span> </span>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col md={8} className=\"border-right\">\r\n                        <Col className=\"p-3 py-5\">\r\n                            <Col className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <h4 className=\"text-right\">Настройка профиля</h4>\r\n                            </Col>\r\n                            <Row className=\"mt-2\">\r\n                                <Col md={4}>\r\n                                    <label className=\"labels\">Имя</label>\r\n                                    <Form>\r\n                                        <FormControl\r\n                                            type=\"text\"\r\n                                            value={name? name : ''}\r\n                                            placeholder=\"Введите имя\"\r\n                                            onChange={e=> setName(e.target.value)}\r\n                                        />\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updName}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={4}><label className=\"labels\">Фамилия</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={surname? surname : ''}\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        onChange={e=> setSurname(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updSurname}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-3\">\r\n                                <Col md={10}><label className=\"labels\">Мобильный номер</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите мобильный номер\"\r\n                                        value={phone_number? phone_number : ''}\r\n                                        onChange={e=> setPhone_number(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updPhone_number}><FaSave /></button>\r\n                                </Col>\r\n                                <Col md={10}><label className=\"labels\">Адрес проживание</label>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"введите адрес проживаний\"\r\n                                        value={home_address? home_address : ''}\r\n                                        onChange={e=> setHome_address(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col className='d-flex align-items-end '>\r\n                                    <button onClick={updDelivery_address}><FaSave /></button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Profile;","import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Pagination} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Pages = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n    const pages = []\r\n    const pageCount = Math.ceil(appeal.totalCount/appeal.limit)\r\n\r\n    for (let i = 0; i < pageCount; i++) {\r\n        pages.push(i+1)\r\n    }\r\n\r\n    return (\r\n        <Pagination className='mt-3'>\r\n            {pages.map(page =>\r\n                <Pagination.Item\r\n                    key={page}\r\n                    className='ml-1'\r\n                    active={appeal.page === page}\r\n                    onClick={() => appeal.setPage(page)}\r\n                >\r\n                    {page}\r\n                </Pagination.Item>\r\n            )}\r\n        </Pagination>\r\n    );\r\n});\r\n\r\nexport default Pages;","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ViewHistory = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history= useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,'reviewed',\r\n            9,1, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,'reviewed',\r\n            9,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n        })\r\n    }, [appeal.page])\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    console.log(historyAppeal)\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {historyAppeal?\r\n                <Container>\r\n                    <Fragment>\r\n                        <table className=\"table mt-5 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id}>\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status == 'reviewed'? 'Рассмотрен' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n                :\r\n                <h1 className='d-flex align-items-center justify-content-center mt-5'>\r\n                    История обращения пустая\r\n                </h1>\r\n            }\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ViewHistory;","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\n\r\nconst ViewActApp = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null, null,\r\n            'viewed',1,9, user.userId).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, null,null, 'viewed',\r\n            2,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [appeal.page])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n                <Container>\r\n                    <Fragment>\r\n                        <table className=\"table mt-5 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status == 'viewed'? 'В процессе рассмотрений' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ViewActApp;","import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport emailjs from 'emailjs-com'\r\nimport {Box, Modal} from \"@mui/material\";\r\n\r\n\r\nconst Mailer = observer(({show, onHide, oneAppeal}) => {\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    function sendEmail(e){\r\n        e.preventDefault()\r\n        emailjs.sendForm('service_xyt2vtn',\r\n            'template_9nyoeit', e.target, 'OdNl7gdZKkEzQnOwt'\r\n        ).then(res => {\r\n            console.log(res)\r\n\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 600,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={show}\r\n                onClose={onHide}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                        <div\r\n                            className='container border'\r\n                            style={{marginTop: '10px', width: '100%'}}\r\n                        >\r\n                            <h1 style={{marginTop: '25px'}}>Форма отправки ответа</h1>\r\n                            <form\r\n                                className='row'\r\n                                style={{margin: '25px 85px 75px 100px'}}\r\n                                onSubmit={sendEmail}\r\n                            >\r\n                                <label>ФИО</label>\r\n                                <input type='text' name='name' className='form-control'/>\r\n\r\n                                <label>Email</label>\r\n                                <input type='email' name='user_email' className='form-control'/>\r\n\r\n                                <label>Сообщение</label>\r\n                                <input name='message' rows='4'className='form-control'/>\r\n\r\n                                <label>Организация</label>\r\n                                <input className='form-control' type='text' name='organization' defaultValue={oneAppeal?.organization_address?.organization_name}/>\r\n\r\n                                <label>Деятельность</label>\r\n                                <input className='form-control' type='text' name='department' defaultValue={oneAppeal?.department_appeal?.department}/>\r\n\r\n                                <label>Дата обращении</label>\r\n                                <input className='form-control' type='date' name='dateAppeal' defaultValue={getDateWithoutTime(oneAppeal?.createdAt)}/>\r\n\r\n                                <input type='submit' value='Send' className='form-control btn btn-primary mt-3' />\r\n                            </form>\r\n                        </div>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Mailer;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Col, Container, Dropdown, Image, Row} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneAppeal, updateStatus} from \"../http/AppealApi\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {Context} from \"../index\";\r\nimport Mailer from \"./Mailer\";\r\n\r\nconst AppealItem = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {id} = useParams();\r\n    const [oneAppeal, setOneAppeal] = useState({})\r\n    const [chooseVisible, setChooseVisible] = useState(false)\r\n\r\n\r\n    useEffect(()=> {\r\n        fetchOneAppeal(id).then(data => {\r\n            setOneAppeal(data)\r\n            setOneAppeal(data)\r\n        })\r\n        },[])\r\n    console.log(oneAppeal)\r\n\r\n    const updStatus = async (status) => {\r\n        try {\r\n            console.log(status)\r\n            updateStatus({status: status},id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className='d-flex flex-column'>\r\n            <Card\r\n                style={{width: 1130, height: 350, border: '5px solid lightgray'}}\r\n                className='mt-3 p-2'\r\n            >\r\n                <Row className='d-flex flex-row align-items-start justify-content-center mt-3'>\r\n                    <Col md={4}>\r\n                        <div style={{background:'lightgray'}} className='d-flex mt-3'> Статус обращения: {oneAppeal?.status == 'notreviewed'? \"Не рассмотрено\" : null}</div>\r\n                        <div style={{background:'transparent'}} className='d-flex mt-3'> Фио: {oneAppeal?.name} {oneAppeal?.surname}</div>\r\n                        <div style={{background:'lightgray'}} className='d-flex mt-3'> Адрес проживания: {oneAppeal?.home_address} </div>\r\n                        <div style={{background:'transparent'}} className='d-flex mt-3'> Email почта: {oneAppeal?.user?.email}</div>\r\n                        {oneAppeal?.nameLegal?\r\n                            <div style={{background:'lightgray'}} className='d-flex mt-3'> Название Юридического лица: {oneAppeal?.nameLegal? oneAppeal?.nameLegal : null}</div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Image style={{width: 300, height: 300}} src={'http://localhost:5000/' + oneAppeal?.img}/>\r\n                    </Col>\r\n                    <Col md={4} >\r\n                        <div className='d-flex flex-column justify-content-between mt-3 mb-3'>\r\n                            <span >Ниже можно скачать прикрепленный файл</span>\r\n                            <Button className='mt-5' variant={\"outline-success\"} href={'http://localhost:5000/' + oneAppeal?.file}>Скачать файл</Button>\r\n                            {\r\n                                user.role === 'EMPLOYEE'?\r\n                                    <div>\r\n                                        <Dropdown className='mt-3'>\r\n                                            <DropdownToggle>{oneAppeal?.status === 'notreviewed'? 'Не рассмотрен' : oneAppeal?.status === 'viewed'? 'В процессе рассмотрений' : oneAppeal?.status === 'reviewed'? 'Рассмотрен' : 'Статус обращений'}</DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <Dropdown.Item onClick={() => updStatus('notreviewed')} >Не рассмотрен</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('viewed')}>В процессе рассмотрений</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('reviewed')}>Рассмотрен</Dropdown.Item>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                        <Button variant={\"outline-dark\"} className='mt-3 p-2' onClick={() => setChooseVisible(true)}>Ответ на электронную почту</Button>\r\n                                        <Mailer oneAppeal={oneAppeal} show={chooseVisible} onHide={() => setChooseVisible(false)} />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <br/>\r\n            <Row>\r\n                <div className='d-flex'> Суть обращения: {oneAppeal?.content}</div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AppealItem;","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Dropdown, Row} from \"react-bootstrap\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../../components/Pages\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\n\r\nconst viewNotActApp = observer(() => {\r\n    const [viewNotActApp, setViewNotActApp] = useState([]);\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals(null, null, null, null,\r\n            9,1, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(null, appeal.selectedOrganization.id,appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page, user.userId).then(data => {\r\n            appeal.setAppeals(data.rows)\r\n            appeal.setTotalCount(data.count)\r\n        })\r\n    }, [appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setViewNotActApp(viewNotActApp.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n                <Container>\r\n                    <Fragment>\r\n                        <Row className='d-flex flex-row justify-content-center mt-3'>\r\n                            <div className='d-flex  align-items-center justify-content-center'>\r\n                                <DropdownMenus />\r\n                                <Dropdown className='ml-4' >\r\n                                    <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                                    <DropdownMenu >\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Не рассмотрено')\r\n                                            setSelectedStatusData('notreviewed')\r\n                                        }}>Не рассмотрено</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('В процессе рассмотрении')\r\n                                            setSelectedStatusData('viewed')\r\n                                        }}>В процессе рассмотрении</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Рассмотрен')\r\n                                            setSelectedStatusData('reviewed')\r\n                                        }}>Рассмотрен</Dropdown.Item>\r\n                                        <Dropdown.Item onClick={() => {\r\n                                            setSelectedStatus('Все обращений')\r\n                                            setSelectedStatusData(null)\r\n                                        }}\r\n\r\n                                        >Все обращений</Dropdown.Item>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Row>\r\n                        <table className=\"table mt-4 text-center\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Дата обращения</th>\r\n                                <th>Название организации</th>\r\n                                <th>Вид деятельности</th>\r\n                                <th>Статус обращений</th>\r\n                                <th>Удалить</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {appeal.appeals.map(appeal => (\r\n                                <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                                    <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                                    <td>{appeal.organization_address?.organization_name}</td>\r\n                                    <td>{appeal.department_appeal?.department}</td>\r\n                                    <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрений' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Fragment>\r\n                    <Pages />\r\n                </Container>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default viewNotActApp;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport Pages from \"../Pages\";\r\n\r\nconst NaturalEntityAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals('false',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        fetchAppeals('false',appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>Организация</th>\r\n                    <th>Деятельность</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрении' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default NaturalEntityAppealTab;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Context} from \"../../index\";\r\nimport {deleteAppeal, fetchAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../Pages\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst LegalEntityAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAppeals(true,null, null, 'null',\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n    console.log(appeal.appeals)\r\n\r\n    useEffect(() => {\r\n        fetchAppeals(true, appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex align-items-center justify-content-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle variant={\"outline-dark\"}>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Все обращений')\r\n                                setSelectedStatusData(null)\r\n                            }}\r\n\r\n                            >Все обращений</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>ФИО</th>\r\n                    <th>Организация</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status == 'notreviewed'? 'Не рассмотрен' : appeal.status == 'viewed'? 'В процессе рассмотрении' : appeal.status == 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default LegalEntityAppealTab;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container, Dropdown, Row, Table} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../DropdownMenus\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {ANON_APPEAL_ITEM_ROUTE, APPEAL_ITEM_ROUTE} from \"../../utils/Consts\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nimport Pages from \"../Pages\";\r\nimport {Context} from \"../../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {deleteAppeal, fetchAnonAppeals, fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\n\r\nconst AnonAppealTab = observer(() => {\r\n    const [historyAppeal, setHistoryAppeal] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(null)\r\n    const [selectedStatusData, setSelectedStatusData] = useState(null)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        fetchDepartments().then(department => appeal.setDepartment(department))\r\n        fetchOrganizations().then(organization => appeal.setOrganizations(organization))\r\n        fetchAnonAppeals(null, null, 'notreviewed',\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n    console.log(appeal.appeals)\r\n\r\n    useEffect(() => {\r\n        fetchAnonAppeals(appeal.selectedOrganization.id, appeal.selectedDepartment.id, selectedStatusData,\r\n            9,appeal.page).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[appeal.selectedOrganization, appeal.selectedDepartment, appeal.page, selectedStatusData])\r\n\r\n\r\n    console.log(appeal.appeals)\r\n\r\n    const delAppeal = async (id) => {\r\n        deleteAppeal(id).then()\r\n        setHistoryAppeal(historyAppeal.filter(appeals => appeals.id !== id))\r\n    }\r\n\r\n    function getDateWithoutTime(date) {\r\n        return require('moment')(date).format('YYYY-MM-DD');\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className='d-flex flex-row'>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <DropdownMenus/>\r\n                    <Dropdown className='ml-4'>\r\n                        <DropdownToggle>{selectedStatus || 'Выберите статус обращения'}</DropdownToggle>\r\n                        <DropdownMenu >\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Не рассмотрено')\r\n                                setSelectedStatusData('notreviewed')\r\n                            }}>Не рассмотрено</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('В процессе рассмотрении')\r\n                                setSelectedStatusData('viewed')\r\n                            }}>В процессе рассмотрении</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => {\r\n                                setSelectedStatus('Рассмотрен')\r\n                                setSelectedStatusData('reviewed')\r\n                            }}>Рассмотрен</Dropdown.Item>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Row>\r\n            <Table className='mt-2'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата обращения</th>\r\n                    <th>Организация</th>\r\n                    <th>Деятельность</th>\r\n                    <th>Статус</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appeal.appeals.map(appeal => (\r\n                    <tr style={{cursor: \"pointer\"}} onDoubleClick={() => history.push(ANON_APPEAL_ITEM_ROUTE+ '/' + appeal.id)} key={appeal.id} >\r\n                        <td>{getDateWithoutTime(appeal.createdAt)}</td>\r\n                        <td>{appeal.organization_address?.organization_name}</td>\r\n                        <td>{appeal.department_appeal?.department}</td>\r\n                        <td>{appeal.status === 'notreviewed'? 'Не рассмотрен' : appeal.status === 'viewed'? 'В процессе рассмотрении' : appeal.status === 'reviewed'? 'Рассмотрен' : null}</td>\r\n                        <td><button className=\"btn btn-danger\" onClick={() => delAppeal(appeal.id)}><RiDeleteBin6Line /></button></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            <Pages />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AnonAppealTab;","import React from 'react';\r\nimport {Button, Container, Modal} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {MAIN_ROUTE} from \"../../utils/Consts\";\r\n\r\nconst InformationalWarning = ({show, onHide}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n            <>\r\n                <Modal\r\n                    show={show}\r\n                    onHide={onHide}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Внимание</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Анонимные обращения, то есть обращения заявителей, в которых не указаны фамилия, собственное\r\n                        имя, отчество либо инициалы гражданина или адрес его места жительства либо наименование\r\n                        юридического лица (полное или сокращенное) или его место\r\n                        нахождения либо указанные данные не соответствуют действительности, не подлежат рассмотрению,\r\n                        если они не содержат сведений о готовящемся, совершаемом или совершенном преступлении.\r\n                    </Modal.Body>\r\n                    <Modal.Footer className='d-flex align-item-center justify-content-center'>\r\n                        <Button variant=\"secondary\" onClick={()=>history.push(MAIN_ROUTE)}>\r\n                            Понятно\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default InformationalWarning;","import React, {useContext, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Container, Form} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {creatAnonAppeal} from \"../http/AppealApi\";\r\nimport InformationalWarning from \"./modals/InformationalWarning\";\r\n\r\n\r\n\r\nconst AnonAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    const [essence, setEssence] = useState('')\r\n    const [img, setImg] = useState(null)\r\n    const [file, setFile] = useState(null)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const selectImg = e =>{\r\n        setImg(e.target.files[0])\r\n    }\r\n\r\n    const selectFile = e =>{\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addAppeal = () => {\r\n        const formData = new FormData()\r\n        formData.append('content', essence)\r\n        formData.append('img', img)\r\n        formData.append('file', file)\r\n        formData.append('organizationAddressId', appeal.selectedOrganization.id)\r\n        formData.append('departmentAppealId', appeal.selectedDepartment.id)\r\n        creatAnonAppeal(formData).then(() => setShow(true))\r\n    }\r\n\r\n    return (\r\n       <Container>\r\n           <Form className='d-flex flex-column'>\r\n               <Form.Control\r\n                   placeholder='Суть обращения'\r\n                   className='mt-3'\r\n                   as=\"textarea\"\r\n                   rows={3}\r\n                   value={essence? essence : ''}\r\n                   onChange={e => setEssence(e.target.value)}\r\n               />\r\n               <br/>\r\n               <h4>Прикрепите фото</h4>\r\n               <Form.Control\r\n                   className='mt-3'\r\n                   type = 'file'\r\n                   onChange={selectImg}\r\n               />\r\n               <br/>\r\n               <h4>Прикрепите файл</h4>\r\n               <Form.Control\r\n                   className='mt-3'\r\n                   type = 'file'\r\n                   onChange={selectFile}\r\n               />\r\n               <Button onClick={addAppeal} className='mt-2 mb-3' variant={\"outline-success\"}>Отправить</Button>\r\n               <InformationalWarning show={show} onHide={() => setShow(false)}/>\r\n           </Form>\r\n       </Container>\r\n    );\r\n});\r\n\r\nexport default AnonAppeal;","import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport DropdownMenus from \"../../components/DropdownMenus\";\r\nimport {Context} from \"../../index\";\r\nimport {fetchDepartments, fetchOrganizations} from \"../../http/AppealApi\";\r\nimport AnonAppeal from \"../../components/AnonAppeal\";\r\n\r\nconst CreateAnonAppeal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchOrganizations().then(data => appeal.setOrganizations(data))\r\n        fetchDepartments().then(data => appeal.setDepartment(data))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <DropdownMenus />\r\n            <AnonAppeal />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default CreateAnonAppeal;","import React, { useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Button, Card, Col, Container, Dropdown, Image, Row} from \"react-bootstrap\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneAnonAppeal, updateAnonStatus} from \"../http/AppealApi\";\r\n\r\nconst AnonAppealItem = observer(() => {\r\n    const {id} = useParams();\r\n    const [oneAppeal, setOneAppeal] = useState({})\r\n\r\n\r\n    useEffect(()=> {\r\n        fetchOneAnonAppeal(id).then(data => {\r\n            setOneAppeal(data)\r\n        })\r\n    },[])\r\n    console.log(oneAppeal)\r\n\r\n    const updStatus = async (status) => {\r\n        try {\r\n            console.log(status)\r\n            updateAnonStatus({status: status},id).then()\r\n            window.location.reload()\r\n        }catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex flex-column'>\r\n            <Card\r\n                style={{width: 1130, height: 350, border: '5px solid lightgray'}}\r\n                className='mt-3 p-2'\r\n            >\r\n                <Row className='d-flex flex-row align-items-start justify-content-center mt-3'>\r\n\r\n                    <Col md={4}>\r\n                        <Image style={{width: 300, height: 300}} src={'http://localhost:5000/' + oneAppeal?.img}/>\r\n                    </Col>\r\n                    <Col md={4} >\r\n                        <div className='d-flex flex-column justify-content-between mt-3 mb-3'>\r\n                            <span >Ниже можно скачать прикрепленный файл</span>\r\n                            <Button className='mt-5' variant={\"outline-success\"} href={'http://localhost:5000/' + oneAppeal?.file}>Скачать файл</Button>\r\n\r\n                                    <div>\r\n                                        <Dropdown className='mt-3'>\r\n                                            <DropdownToggle>{oneAppeal?.status === 'notreviewed'? 'Не рассмотрен' : oneAppeal?.status === 'viewed'? 'В процессе рассмотрений' : oneAppeal?.status === 'reviewed'? 'Рассмотрен' : 'Статус обращений'}</DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <Dropdown.Item onClick={() => updStatus('notreviewed')} >Не рассмотрен</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('viewed')}>В процессе рассмотрений</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => updStatus('reviewed')}>Рассмотрен</Dropdown.Item>\r\n                                            </DropdownMenu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <br/>\r\n            <Row>\r\n                <div className='d-flex'> Суть обращения: {oneAppeal?.content}</div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default AnonAppealItem;","import React from 'react';\r\nimport {Pie} from 'react-chartjs-2'\r\n\r\nconst Chart = ({chartDate}) => {\r\n    return (\r\n        <div>\r\n            <Pie\r\n                data={chartDate}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n\r\n// labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n//     datasets: [{\r\n//     label: '# of Votes',\r\n//     data: [12, 19, 3, 5, 2, 3],\r\n//     backgroundColor: [\r\n//         'rgba(255, 99, 132, 0.2)',\r\n//         'rgba(54, 162, 235, 0.2)',\r\n//         'rgba(255, 206, 86, 0.2)',\r\n//         'rgba(75, 192, 192, 0.2)',\r\n//         'rgba(153, 102, 255, 0.2)',\r\n//         'rgba(255, 159, 64, 0.2)'\r\n//     ],\r\n//     borderColor: [\r\n//         'rgba(255, 99, 132, 1)',\r\n//         'rgba(54, 162, 235, 1)',\r\n//         'rgba(255, 206, 86, 1)',\r\n//         'rgba(75, 192, 192, 1)',\r\n//         'rgba(153, 102, 255, 1)',\r\n//         'rgba(255, 159, 64, 1)'\r\n//     ],\r\n//     borderWidth: 1\r\n// }]","import React, {useContext, useEffect, useState} from 'react';\r\nimport Chart from \"./Chart\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"@mui/material\";\r\n\r\nconst Diagram = observer(() => {\r\n\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n\r\n        fetchAppeals('false',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n\r\n\r\n\r\n    const stringOrder = []\r\n    for (let i = 0; i < appeal.appeals.length; i++) {\r\n        stringOrder[i] = appeal.appeals[i].organization_address.organization_name\r\n    }\r\n\r\n\r\n    var result = {};\r\n    stringOrder.forEach(function (a) {\r\n        result[a] = result[a] + 1 || 1;\r\n    });\r\n\r\n    var j = 0\r\n    var Names = []\r\n    var counts = []\r\n    for (var key in result){\r\n        Names[j] = key\r\n        counts[j] = result[key]\r\n        j++\r\n    }\r\n        console.log(Names)\r\n        console.log(counts)\r\n    console.log(result)\r\n\r\n\r\n    const [pieDate, setPieDate] = useState({\r\n        labels: Names,\r\n        datasets: [{\r\n            label: 'gained',\r\n            data: counts,\r\n            backgroundColor:  [\r\n                'rgba(250,0,0,0.2)',\r\n                'rgba(55,255,0,0.2)',\r\n                'rgba(84,0,82,0.2)',\r\n                'rgba(231,238,5,0.2)',\r\n                'rgba(7,203,248,0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgb(79,203,11)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }]\r\n    });\r\n\r\n    return (\r\n       <Container>\r\n           <div className='d-flex justify-content-center align-items-center mt-5 flex-wrap'>\r\n               <div className='mb-3' style={{width: '900px'}}>\r\n                   <Chart chartDate={pieDate}/>\r\n               </div>\r\n               <h3>Статистика по областям физических лиц</h3>\r\n           </div>\r\n       </Container>\r\n    );\r\n});\r\n\r\nexport default Diagram;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Chart from \"./Chart\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\n\r\nconst DiagramLegal = observer(() => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n\r\n        fetchAppeals('true',null, null, null,\r\n            9,1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n    },[])\r\n\r\n\r\n    const stringOrder = []\r\n    for (let i = 0; i < appeal.appeals.length; i++) {\r\n        stringOrder[i] = appeal.appeals[i].organization_address.organization_name\r\n    }\r\n\r\n\r\n    var result = {};\r\n    stringOrder.forEach(function (a) {\r\n        result[a] = result[a] + 1 || 1;\r\n    });\r\n\r\n    var j = 0\r\n    var Names = []\r\n    var counts = []\r\n    for (var key in result){\r\n        Names[j] = key\r\n        counts[j] = result[key]\r\n        j++\r\n    }\r\n\r\n\r\n\r\n    const [pieDate, setPieDate] = useState({\r\n        labels: Names,\r\n        datasets: [{\r\n            label: 'gained',\r\n            data: counts,\r\n            backgroundColor:  [\r\n                'rgba(250,0,0,0.2)',\r\n                'rgba(55,255,0,0.2)',\r\n                'rgba(84,0,82,0.2)',\r\n                'rgba(231,238,5,0.2)',\r\n                'rgba(7,203,248,0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgb(79,203,11)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }]\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Container>\r\n          <div className='d-flex justify-content-center align-items-center mt-5 flex-wrap'>\r\n              <div className='mb-3' style={{width: '900px'}}>\r\n                  <Chart chartDate={pieDate}/>\r\n              </div>\r\n              <h3>Статистика по областям юридических лиц</h3>\r\n          </div>\r\n      </Container>\r\n    );\r\n});\r\n\r\nexport default DiagramLegal;","import Admin from \"./pages/Admin\";\r\nimport {\r\n    ADMIN_ROUTE,\r\n    CREATE_APPEAL_ROUTE,\r\n    EMPLOYEE_ROUTE,\r\n    LOGIN_ROUTE,\r\n    MAIN_ROUTE,\r\n    REGISTRATION_ROUTE,\r\n    CRUD_ORGANIZATION_ROUTE,\r\n    CRUD_DEPARTMENT_ROUTE,\r\n    REGISTRATION_EMPLOYEE_ROUTE,\r\n    CRUD_EMPLOYEE_ROUTE,\r\n    EMPLOYEE_PROFILE_ROUTE,\r\n    PROFILE_ROUTE,\r\n    HISTORY_APPEAL_USER_ROUTE,\r\n    ACTIVE_APPEAL_USER_ROUTE,\r\n    APPEAL_ITEM_ROUTE,\r\n    NOT_ACTIVE_APPEAL_USER_ROUTE,\r\n    NATURAL_TAB_ROUTE,\r\n    LEGAL_TAB_ROUTE,\r\n    ANON_TAB_ROUTE,\r\n    SEND_EMAIL_ROUTE, ANON_APPEAL_ROUTE, ANON_APPEAL_ITEM_ROUTE, DIAGRAM_ROUTE, DIAGRAM_SECOND_ROUTE\r\n} from \"./utils/Consts\";\r\nimport Auth from \"./pages/Auth\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport creatAppeal from \"./pages/userPages/creatAppeal\";\r\nimport EmployeePage from \"./pages/employeePages/EmployeePage\";\r\nimport CRUDOrganization from \"./pages/adminPages/CRUDOrganization\";\r\nimport CRUDDepartment from \"./pages/adminPages/CRUDDepartment\";\r\nimport RegistrationNewEmployee from \"./pages/adminPages/RegistrationNewEmployee\";\r\nimport CRUDEmployee from \"./pages/adminPages/CRUDEmployee\";\r\nimport EmployeeProfile from \"./components/CRUD/employeeCRUD/EmployeeProfile\";\r\nimport Profile from \"./pages/userPages/Profile\";\r\nimport viewHistory from \"./pages/userPages/viewHistory\";\r\nimport viewActApp from \"./pages/userPages/viewActApp\";\r\nimport AppealItem from \"./components/AppealItem\";\r\nimport viewNotActApp from \"./pages/userPages/viewNotActApp\";\r\nimport NaturalEntityAppealTab from \"./components/tabs/NaturalEntityAppealTab\";\r\nimport LegalEntityAppealTab from \"./components/tabs/LegalEntityAppealTab\";\r\nimport AnonAppealTab from \"./components/tabs/AnonAppealTab\";\r\nimport Mailer from \"./components/Mailer\";\r\nimport CreateAnonAppeal from \"./pages/userPages/CreateAnonAppeal\";\r\nimport AnonAppealItem from \"./components/AnonAppealItem\";\r\nimport Diagram from \"./pages/employeePages/Diagram\";\r\nimport DiagramLegal from \"./pages/employeePages/DiagramLegal\";\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n    {\r\n        path: CRUD_ORGANIZATION_ROUTE,\r\n        Component: CRUDOrganization\r\n    },\r\n    {\r\n        path: CRUD_DEPARTMENT_ROUTE,\r\n        Component: CRUDDepartment\r\n    },\r\n    {\r\n        path: REGISTRATION_EMPLOYEE_ROUTE,\r\n        Component: RegistrationNewEmployee\r\n    },\r\n    {\r\n        path: CRUD_EMPLOYEE_ROUTE,\r\n        Component: CRUDEmployee\r\n    },\r\n    {\r\n        path: EMPLOYEE_PROFILE_ROUTE + '/:id',\r\n        Component: EmployeeProfile\r\n    }\r\n]\r\n\r\nexport const employeeRoutes = [\r\n    {\r\n        path: EMPLOYEE_ROUTE,\r\n        Component: EmployeePage\r\n    },\r\n    {\r\n        path: APPEAL_ITEM_ROUTE + '/:id',\r\n        Component: AppealItem\r\n    },\r\n    {\r\n        path: NATURAL_TAB_ROUTE,\r\n        Component: NaturalEntityAppealTab\r\n    },\r\n    {\r\n        path: LEGAL_TAB_ROUTE,\r\n        Component: LegalEntityAppealTab\r\n    },\r\n    {\r\n        path: ANON_TAB_ROUTE,\r\n        Component: AnonAppealTab\r\n    },\r\n    {\r\n        path: SEND_EMAIL_ROUTE,\r\n        Component: Mailer\r\n    },\r\n    {\r\n        path: ANON_APPEAL_ITEM_ROUTE + '/:id',\r\n        Component: AnonAppealItem\r\n    }\r\n    ,\r\n    {\r\n        path: DIAGRAM_ROUTE,\r\n        Component: Diagram\r\n    },\r\n    {\r\n        path: DIAGRAM_SECOND_ROUTE,\r\n        Component: DiagramLegal\r\n    }\r\n]\r\n\r\nexport const userRoutes = [\r\n    {\r\n        path: CREATE_APPEAL_ROUTE,\r\n        Component: creatAppeal\r\n    },\r\n    {\r\n        path: PROFILE_ROUTE,\r\n        Component: Profile\r\n    },\r\n    {\r\n        path: HISTORY_APPEAL_USER_ROUTE,\r\n        Component: viewHistory\r\n    },\r\n    {\r\n        path: ACTIVE_APPEAL_USER_ROUTE,\r\n        Component: viewActApp\r\n    },\r\n    {\r\n        path: NOT_ACTIVE_APPEAL_USER_ROUTE,\r\n        Component: viewNotActApp\r\n    },\r\n    {\r\n        path: APPEAL_ITEM_ROUTE + '/:id',\r\n        Component: AppealItem\r\n    }\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: MAIN_ROUTE,\r\n        Component: MainPage\r\n    },\r\n    {\r\n        path: ANON_APPEAL_ROUTE,\r\n        Component: CreateAnonAppeal\r\n    }\r\n]","import React, {useContext} from 'react';\r\nimport {Switch,Route, Redirect} from 'react-router-dom'\r\nimport {adminRoutes, employeeRoutes, publicRoutes, userRoutes} from \"../routes\";\r\nimport {MAIN_ROUTE} from \"../utils/Consts\";\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst AppRouter = observer(() => {\r\n    const {user} = useContext(Context)\r\n\r\n    console.log(user)\r\n    return (\r\n        <Switch>\r\n            {user.isAuth && user.role === \"ADMIN\" &&  adminRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth && employeeRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {user.isAuth && userRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            <Redirect to={MAIN_ROUTE}/>\r\n        </Switch>\r\n    );\r\n});\r\n\r\nexport default AppRouter;","import React, {useContext, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Box, Modal, Typography} from \"@mui/material\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {\r\n    CRUD_EMPLOYEE_ROUTE,\r\n    DIAGRAM_ROUTE,\r\n    DIAGRAM_SECOND_ROUTE,\r\n    REGISTRATION_EMPLOYEE_ROUTE\r\n} from \"../../utils/Consts\";\r\nimport {fetchAppeals} from \"../../http/AppealApi\";\r\nimport {Context} from \"../../index\";\r\n\r\nconst ChooseChart = ({show, onHide}) => {\r\n    const {appeal} = useContext(Context)\r\n\r\n    const handleDiagramFirst = async () => {\r\n\r\n        await fetchAppeals('false', null, null, null,\r\n            9, 1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n        history.push(DIAGRAM_ROUTE)\r\n\r\n        appeal.setIsHide(false)\r\n    }\r\n\r\n    const handleDiagramSecond = async () => {\r\n        show=false\r\n        await fetchAppeals('true', null, null, null,\r\n            9, 1).then(data => {\r\n                appeal.setAppeals(data.rows)\r\n                appeal.setTotalCount(data.count)\r\n            }\r\n        )\r\n        history.push(DIAGRAM_SECOND_ROUTE)\r\n        appeal.setIsHide(false)\r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={show}\r\n                onClose={onHide}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Выберите действие\r\n                    </Typography>\r\n                    <Typography className='d-flex flex-column' id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={handleDiagramFirst}>Статистика по областям физических лиц</Button>\r\n                        <Button className='mt-2 p-2' variant={\"outline-dark\"} onClick={handleDiagramSecond}>Статистика по областям юридических лиц</Button>\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChooseChart;","import React, {useContext, useState} from 'react';\r\nimport {Button, Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {ADMIN_ROUTE,  EMPLOYEE_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, PROFILE_ROUTE} from \"../utils/Consts\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport ChooseChart from \"./modals/ChooseChart\";\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const {appeal} = useContext(Context)\r\n    const history = useHistory()\r\n    const [chooseVisible, setChooseVisible] = useState(false)\r\n\r\n    const logOut = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n        localStorage.setItem('token', '')\r\n        history.push(MAIN_ROUTE)\r\n    }\r\n\r\n    return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <NavLink style={{color: 'white'}} to={MAIN_ROUTE}>ФЗСН</NavLink>\r\n                    {user.isAuth ?\r\n                        user.role === \"ADMIN\"?\r\n                            <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                <Button variant={\"outline-light\"} onClick={()=> history.push(ADMIN_ROUTE)}>Админ панель </Button>\r\n                                <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                            </Nav>\r\n                            :\r\n                            user.role === \"USER\"?\r\n                                <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                    <Button variant={\"outline-light\"} onClick={()=> history.push(PROFILE_ROUTE)}>Профиль </Button>\r\n                                    <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                                </Nav>\r\n                                :\r\n                                user.role === \"EMPLOYEE\"?\r\n                                    <Nav className='ml-auto' style={{color: 'white'}}>\r\n                                        <Button variant={\"outline-light\"} onClick={() => appeal.setIsHide(true)}>Статистика</Button>\r\n                                        <Button className='ml-2' variant={\"outline-light\"} onClick={()=> history.push(EMPLOYEE_ROUTE)}>Панель работника</Button>\r\n                                        <Button className='ml-2' variant={\"outline-light\"} onClick={()=> logOut()}>Выйти</Button>\r\n                                        <ChooseChart show={appeal.isHide} onHide={appeal.isHide}/>\r\n                                    </Nav>\r\n                                    :\r\n                                    null\r\n                    :\r\n                        <Nav className='ml-auto'>\r\n                            <Button  variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизация</Button>\r\n                        </Nav>\r\n                    }\r\n                </Container>\r\n            </Navbar>\r\n\r\n    );\r\n});\r\n\r\nexport default NavBar;","import React, {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/UserApi\";\nimport {Spinner} from \"react-bootstrap\";\n\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n             user.setUser(true)\n            user.setIsAuth(true)\n            user.setRole(data.role)\n            user.setUserId(data.id)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if(loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n  return (\n    <BrowserRouter>\n      <NavBar/>\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","import {makeAutoObservable} from \"mobx\";\r\n\r\nexport default class userAppeal{\r\n    constructor() {\r\n        this._isAuth = false\r\n        this._user = {}\r\n        this._role = ''\r\n        this._userId = ''\r\n        // this._employees = []\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n\r\n    get role() {\r\n        return this._role;\r\n    }\r\n\r\n    setRole(role) {\r\n        this._role = role;\r\n    }\r\n\r\n\r\n    // get employees() {\r\n    //     return this._employees;\r\n    // }\r\n    //\r\n    // setEmployees(value) {\r\n    //     this._employees = value;\r\n    // }\r\n\r\n\r\n    get userId() {\r\n        return this._userId;\r\n    }\r\n\r\n    setUserId(userId) {\r\n        this._userId = userId;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import {makeAutoObservable} from \"mobx\";\r\n\r\n\r\nexport default class Appeal{\r\n    constructor() {\r\n        this._organizations = []\r\n        this._departments = []\r\n        this._appeals = []\r\n        this._selectedOrganization = {}\r\n        this._selectedDepartment = {}\r\n        this._isHide = false;\r\n        // this._oneAppeal = {}\r\n        this._page = 1\r\n        this._total_count = 0\r\n        this._limit = 9\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n\r\n\r\n    get organizations() {\r\n        return this._organizations;\r\n    }\r\n\r\n    setOrganizations(organization) {\r\n        this._organizations = organization;\r\n    }\r\n\r\n    get departments() {\r\n        return this._departments;\r\n    }\r\n\r\n    setDepartment(department) {\r\n        this._departments = department;\r\n    }\r\n\r\n    get appeals() {\r\n        return this._appeals;\r\n    }\r\n\r\n    setAppeals(appeals) {\r\n        this._appeals = appeals;\r\n    }\r\n\r\n    //selected organization\r\n    get selectedOrganization() {\r\n        return this._selectedOrganization;\r\n    }\r\n\r\n    setSelectedOrganization(organization_name) {\r\n        this._selectedOrganization = organization_name;\r\n    }\r\n\r\n    //selected department\r\n\r\n    get selectedDepartment() {\r\n        return this._selectedDepartment;\r\n    }\r\n\r\n    setSelectedDepartment(department) {\r\n        this._selectedDepartment = department;\r\n    }\r\n\r\n\r\n    get page() {\r\n        return this._page;\r\n    }\r\n\r\n    setPage(page) {\r\n        this._page = page;\r\n    }\r\n\r\n    get totalCount() {\r\n        return this._total_count;\r\n    }\r\n\r\n    setTotalCount(count) {\r\n        this._total_count = count;\r\n    }\r\n\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n\r\n    // setLimit(limit) {\r\n    //     this._limit = limit;\r\n    // }\r\n\r\n\r\n    // get oneAppeal() {\r\n    //     return this._oneAppeal;\r\n    // }\r\n    //\r\n    // setOneAppeal(value) {\r\n    //     this._oneAppeal = value;\r\n    // }\r\n\r\n\r\n    get isHide() {\r\n        return this._isHide;\r\n    }\r\n\r\n    setIsHide(value) {\r\n        this._isHide = value;\r\n    }\r\n\r\n    get total_count() {\r\n        return this._total_count;\r\n    }\r\n\r\n    set total_count(value) {\r\n        this._total_count = value;\r\n    }\r\n}","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport userAppeal from \"./appeal/userAppeal\";\nimport Appeal from \"./appeal/Appeal\";\n\n\nexport const Context = createContext(null)\n\n\nReactDOM.render(\n    <Context.Provider value={{\n        user: new userAppeal(),\n        appeal: new Appeal()\n    }}>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}